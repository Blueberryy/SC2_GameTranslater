<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Fluent="urn:fluent-ribbon"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:source="clr-namespace:SC2_GameTranslater.Source"
    mc:Ignorable="d">

    <!--#region Converter-->
    <source:TitleTextConverter x:Key="Converter_TitleText" />
    <source:AutoNumberValueConverter x:Key="Converter_AutoNumberValue" />
    <source:EnumLanguageToTreslateNameConverter x:Key="Converter_EnumLanguageToTreslateName" />
    <source:EnumTranslatedDataTextConverter x:Key="Converter_TranslatedDataText" />
    <source:EnumGameDataTextConverter x:Key="Converter_GameDataText" />
    <source:EnumNameInLanguage_TextFileConverter x:Key="Converter_EnumNameInLanguage_TextFile" />
    <source:EnumValue_TextStatusConverter x:Key="Converter_EnumValue_TextStatus" />
    <source:EnumValue_UseStatusConverter x:Key="Converter_EnumValue_UseStatus" />
    <source:EnumNameInLanguage_TextStatusConverter x:Key="Converter_EnumNameInLanguage_TextStatus" />
    <source:EnumNameInLanguage_UseStatusConverter x:Key="Converter_EnumNameInLanguage_UseStatus" />
    <source:EnumColor_TextStatusConverter x:Key="Converter_EnumColor_TextStatus" />
    <source:EnumColor_UseStatusConverter x:Key="Converter_EnumColor_UseStatus" />
    <source:TextInGalaxyFileNameConverter x:Key="Converter_TextInGalaxyFileName" />
    <source:DataGridColumnNullTextFontWeightConverter x:Key="Converter_DataGridColumnNullTextFontWeight" />
    <source:DataGridColumnModifyedTextFontWeightConverter x:Key="Converter_DataGridColumnModifyedTextFontWeight" />
    <source:RichTextBoxInGalaxyTextConverter x:Key="Converter_RichTextBoxInGalaxyText" />
    <source:CommonNotValueConverter x:Key="Converter_CommonNotValue" />
    <source:SerachLocationByRegexControlConverter x:Key="Converter_SerachLocationByRegexControl" />
    <BooleanToVisibilityConverter x:Key="Converter_BooleanToVisibility" />
    <source:LanguageButtonHeaderConverter x:Key="Converter_LanguageButtonHeader" />
    <source:LanguageButtonTagConverter x:Key="Converter_LanguageButtonTag" />
    <source:LanguageButtonIconConverter x:Key="Converter_LanguageButtonIcon" />
    <source:LanguageButtonLargeIconConverter x:Key="Converter_LanguageButtonLargeIcon" />
    <source:CopyTargetLanguageButtonEnableConverter x:Key="Converter_CopyTargetLanguageButtonEnable" />
    <source:GoToIndexConfirmButtonEnableConverter x:Key="Converter_GoToIndexConfirmButtonEnable" />
    <!--#endregion-->

    <!--#region ToolTip-->

    <!--#region Language-->
    
    
    
    <!--#endregion-->

    <!--#region RibbonButton-->
    
    <Fluent:ScreenTip
        x:Key="ToolTip_New"
        Title="{DynamicResource TP_RibbonButton_New_Title}"
        Width="300"
        DisableReason="{DynamicResource TP_RibbonButton_New_DisableReason}"
        HelpTopic="{x:Static source:Class_ConstantAndEnum.Link_HelpTopic}"
        Image="{StaticResource ResourceKey=IMAGE_New}"
        IsRibbonAligned="False"
        Text="{DynamicResource TP_RibbonButton_New_Text}" />

    <Fluent:ScreenTip
        x:Key="ToolTip_Open"
        Title="{DynamicResource TP_RibbonButton_Open_Title}"
        Width="300"
        DisableReason="{DynamicResource TP_RibbonButton_Open_DisableReason}"
        HelpTopic="{x:Static source:Class_ConstantAndEnum.Link_HelpTopic}"
        Image="{StaticResource ResourceKey=IMAGE_Open}"
        IsRibbonAligned="False"
        Text="{DynamicResource TP_RibbonButton_Open_Text}" />

    <Fluent:ScreenTip
        x:Key="ToolTip_Save"
        Title="{DynamicResource TP_RibbonButton_Save_Title}"
        Width="300"
        DisableReason="{DynamicResource TP_RibbonButton_Save_DisableReason}"
        HelpTopic="{x:Static source:Class_ConstantAndEnum.Link_HelpTopic}"
        Image="{StaticResource ResourceKey=IMAGE_Save}"
        IsRibbonAligned="False"
        Text="{DynamicResource TP_RibbonButton_Save_Text}" />

    <Fluent:ScreenTip
        x:Key="ToolTip_SaveAs"
        Title="{DynamicResource TP_RibbonButton_SaveAs_Title}"
        Width="300"
        DisableReason="{DynamicResource TP_RibbonButton_SaveAs_DisableReason}"
        HelpTopic="{x:Static source:Class_ConstantAndEnum.Link_HelpTopic}"
        Image="{StaticResource ResourceKey=IMAGE_Save}"
        IsRibbonAligned="False"
        Text="{DynamicResource TP_RibbonButton_SaveAs_Text}" />

    <Fluent:ScreenTip
        x:Key="ToolTip_Close"
        Title="{DynamicResource TP_RibbonButton_Close_Title}"
        Width="300"
        DisableReason="{DynamicResource TP_RibbonButton_Close_DisableReason}"
        HelpTopic="{x:Static source:Class_ConstantAndEnum.Link_HelpTopic}"
        Image="{StaticResource ResourceKey=IMAGE_Close}"
        IsRibbonAligned="False"
        Text="{DynamicResource TP_RibbonButton_Close_Text}" />

    <Fluent:ScreenTip
        x:Key="ToolTip_Accept"
        Title="{DynamicResource TP_RibbonButton_Accept_Title}"
        Width="300"
        DisableReason="{DynamicResource TP_RibbonButton_Accept_DisableReason}"
        HelpTopic="{x:Static source:Class_ConstantAndEnum.Link_HelpTopic}"
        Image="{StaticResource ResourceKey=IMAGE_Accept}"
        IsRibbonAligned="False"
        Text="{DynamicResource TP_RibbonButton_Accept_Text}" />

    <Fluent:ScreenTip
        x:Key="ToolTip_ReloadTranslation"
        Title="{DynamicResource TP_RibbonButton_ReloadTranslation_Title}"
        Width="300"
        DisableReason="{DynamicResource TP_RibbonButton_ReloadTranslation_DisableReason}"
        HelpTopic="{x:Static source:Class_ConstantAndEnum.Link_HelpTopic}"
        Image="{StaticResource ResourceKey=IMAGE_ReloadTranslation}"
        IsRibbonAligned="False"
        Text="{DynamicResource TP_RibbonButton_ReloadTranslation_Text}" />

    <Fluent:ScreenTip
        x:Key="ToolTip_ReloadSourceText"
        Title="{DynamicResource TP_RibbonButton_ReloadSourceText_Title}"
        Width="300"
        DisableReason="{DynamicResource TP_RibbonButton_ReloadSourceText_DisableReason}"
        HelpTopic="{x:Static source:Class_ConstantAndEnum.Link_HelpTopic}"
        Image="{StaticResource ResourceKey=IMAGE_ReloadSourceText}"
        IsRibbonAligned="False"
        Text="{DynamicResource TP_RibbonButton_ReloadSourceText_Text}" />

    <Fluent:ScreenTip
        x:Key="ToolTip_FilterPrev"
        Title="{DynamicResource TP_RibbonButton_FilterPrev_Title}"
        Width="300"
        DisableReason="{DynamicResource TP_RibbonButton_FilterPrev_DisableReason}"
        HelpTopic="{x:Static source:Class_ConstantAndEnum.Link_HelpTopic}"
        Image="{StaticResource ResourceKey=IMAGE_ReloadSourceText}"
        IsRibbonAligned="False"
        Text="{DynamicResource TP_RibbonButton_ReloadSourceText_Text}" />

    <Fluent:ScreenTip
        x:Key="ToolTip_FilterNext"
        Title="{DynamicResource TP_RibbonButton_FilterNext_Title}"
        Width="300"
        DisableReason="{DynamicResource TP_RibbonButton_FilterNext_DisableReason}"
        HelpTopic="{x:Static source:Class_ConstantAndEnum.Link_HelpTopic}"
        Image="{StaticResource ResourceKey=IMAGE_FilterNext}"
        IsRibbonAligned="False"
        Text="{DynamicResource TP_RibbonButton_FilterNext_Text}" />
    
    <Fluent:ScreenTip
        x:Key="ToolTip_RecentProjects"
        Title="{DynamicResource TP_RibbonButton_RecentProjects_Title}"
        Width="300"
        DisableReason="{DynamicResource TP_RibbonButton_RecentProjects_DisableReason}"
        HelpTopic="{x:Static source:Class_ConstantAndEnum.Link_HelpTopic}"
        IsRibbonAligned="False"
        Text="{DynamicResource TP_RibbonButton_RecentProjects_Text}" />

    <Fluent:ScreenTip
        x:Key="ToolTip_Preference"
        Title="{DynamicResource TP_RibbonButton_Preference_Title}"
        Width="300"
        DisableReason="{DynamicResource TP_RibbonButton_Preference_DisableReason}"
        HelpTopic="{x:Static source:Class_ConstantAndEnum.Link_HelpTopic}"
        IsRibbonAligned="False"
        Text="{DynamicResource TP_RibbonButton_Preference_Text}" />

    <Fluent:ScreenTip
        x:Key="ToolTip_SoftwareLanguage"
        Title="{DynamicResource TP_RibbonButton_SoftwareLanguage_Title}"
        Width="300"
        DisableReason="{DynamicResource TP_RibbonButton_SoftwareLanguage_DisableReason}"
        HelpTopic="{x:Static source:Class_ConstantAndEnum.Link_HelpTopic}"
        IsRibbonAligned="False"
        Text="{DynamicResource TP_RibbonButton_SoftwareLanguage_Text}" />

    <Fluent:ScreenTip
        x:Key="ToolTip_ComponentsPath"
        Title="{DynamicResource TP_RibbonButton_ComponentsPath_Title}"
        Width="300"
        DisableReason="{DynamicResource TP_RibbonButton_ComponentsPath_DisableReason}"
        HelpTopic="{x:Static source:Class_ConstantAndEnum.Link_HelpTopic}"
        IsRibbonAligned="False"
        Text="{DynamicResource TP_RibbonButton_ComponentsPath_Text}" />

    <!--#endregion-->

    <!--#endregion-->

    <!--#region Template & Style-->

    <!--#region BLZ_Button-->
    <Style x:Key="BLZ_ButtonStyle" TargetType="{x:Type source:Button}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle
                                    Margin="2"
                                    SnapsToDevicePixels="True"
                                    Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                    StrokeDashArray="1 2"
                                    StrokeThickness="1" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="#00DDDDDD" />
        <Setter Property="BorderBrush" Value="#00707070" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type source:Button}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                        <Grid
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            SnapsToDevicePixels="True">
                            <Image
                                x:Name="BackGroundImage_Normal"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                SnapsToDevicePixels="True"
                                Source="{TemplateBinding NormalImage}"
                                Stretch="Fill" />
                            <Image
                                x:Name="BackGroundImage_Hover"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                SnapsToDevicePixels="True"
                                Source="{TemplateBinding HoverImage}"
                                Stretch="Fill"
                                Visibility="Hidden" />
                            <Image
                                x:Name="BackGroundImage_Press"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                SnapsToDevicePixels="True"
                                Source="{TemplateBinding PressImage}"
                                Stretch="Fill"
                                Visibility="Hidden" />
                            <Image
                                x:Name="BackGroundImage_Checked"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                SnapsToDevicePixels="True"
                                Source="{TemplateBinding CheckedImage}"
                                Stretch="Fill"
                                Visibility="Hidden" />
                            <Image
                                x:Name="BackGroundImage_Disable"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                SnapsToDevicePixels="True"
                                Source="{TemplateBinding DisableImage}"
                                Stretch="Fill"
                                Visibility="Hidden" />
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BackGroundImage_Normal" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="BackGroundImage_Hover" Property="Visibility" Value="Visible" />
                            <Setter TargetName="BackGroundImage_Press" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="BackGroundImage_Checked" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="BackGroundImage_Disable" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BackGroundImage_Normal" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="BackGroundImage_Hover" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="BackGroundImage_Press" Property="Visibility" Value="Visible" />
                            <Setter TargetName="BackGroundImage_Checked" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="BackGroundImage_Disable" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter TargetName="BackGroundImage_Normal" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="BackGroundImage_Hover" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="BackGroundImage_Press" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="BackGroundImage_Checked" Property="Visibility" Value="Visible" />
                            <Setter TargetName="BackGroundImage_Disable" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="BackGroundImage_Normal" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="BackGroundImage_Hover" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="BackGroundImage_Press" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="BackGroundImage_Checked" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="BackGroundImage_Disable" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region CheckBox-->
    <ControlTemplate x:Key="CheckBoxControlTemplate" TargetType="{x:Type Fluent:CheckBox}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Image
                x:Name="PART_IconImage"
                Grid.Column="0"
                Width="16"
                Height="16"
                Margin="1,1,1,1"
                VerticalAlignment="Center"
                IsEnabled="{TemplateBinding IsEnabled}"
                Source="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}" />
            <Grid
                Grid.Column="1"
                Margin="3,0,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Center">
                <Border
                    x:Name="border"
                    Width="13"
                    Height="13"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}">
                    <Grid>
                        <Path
                            x:Name="CheckIcon"
                            Width="7.5"
                            Height="6.9"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Fluent:FrameworkHelper.UseLayoutRounding="False"
                            Data="M48.4375,110.4375 L51.4995,112.812 L56.3745,107.24883"
                            Opacity="0"
                            Stretch="Fill"
                            Stroke="{DynamicResource Fluent.Ribbon.Brushes.HighlightBrush}"
                            StrokeEndLineCap="Triangle"
                            StrokeStartLineCap="Triangle"
                            StrokeThickness="1.5" />
                        <Rectangle
                            x:Name="IndeterminateIcon"
                            Width="7"
                            Height="7"
                            Fill="{DynamicResource GrayBrush2}"
                            Opacity="0" />
                        <Rectangle
                            x:Name="DisabledVisualElement"
                            Fill="{DynamicResource WhiteBrush}"
                            Opacity="0"
                            RadiusX="1"
                            RadiusY="1" />
                    </Grid>
                </Border>
            </Grid>
            <ContentControl
                Grid.Column="2"
                Margin="2,0,0,0"
                Foreground="{TemplateBinding Foreground}"
                IsTabStop="False">
                <ContentPresenter
                    x:Name="contentPresenter"
                    Width="Auto"
                    Margin="{TemplateBinding Padding}"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    Content="{TemplateBinding Header}"
                    ContentTemplate="{TemplateBinding ContentTemplate}"
                    RecognizesAccessKey="True" />
            </ContentControl>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.BorderBrush}" />
                <Setter TargetName="border" Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.Background}" />
                <Setter TargetName="CheckIcon" Property="Stroke" Value="{DynamicResource Fluent.Ribbon.Brushes.CheckBox.MouseOver.Stroke}" />
                <Setter TargetName="IndeterminateIcon" Property="Fill" Value="{DynamicResource Fluent.Ribbon.Brushes.CheckBox.MouseOver.Stroke}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.BorderBrush}" />
                <Setter TargetName="border" Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.Background}" />
                <Setter TargetName="CheckIcon" Property="Stroke" Value="{DynamicResource Fluent.Ribbon.Brushes.CheckBox.Pressed.Stroke}" />
                <Setter TargetName="IndeterminateIcon" Property="Fill" Value="{DynamicResource Fluent.Ribbon.Brushes.CheckBox.Pressed.Stroke}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="contentPresenter" Property="Opacity" Value=".55" />
                <Setter TargetName="DisabledVisualElement" Property="Opacity" Value=".55" />
                <Setter TargetName="PART_IconImage" Property="Opacity" Value="0.5" />
                <Setter TargetName="PART_IconImage" Property="Effect">
                    <Setter.Value>
                        <Fluent:GrayscaleEffect />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="CheckIcon" Property="Opacity" Value="1" />
            </Trigger>
            <Trigger Property="IsChecked" Value="{x:Null}">
                <Setter TargetName="IndeterminateIcon" Property="Opacity" Value="1" />
            </Trigger>
            <Trigger Property="FlowDirection" Value="RightToLeft">
                <Setter TargetName="CheckIcon" Property="LayoutTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleX="-1" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="RibbonCheckBoxStyle" TargetType="{x:Type Fluent:CheckBox}">
        <Setter Property="ToolTipService.ShowDuration" Value="30000" />
        <Setter Property="Template" Value="{DynamicResource CheckBoxControlTemplate}" />
        <Setter Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.CheckBox.Background}" />
        <Setter Property="Foreground" Value="{DynamicResource Fluent.Ribbon.Brushes.LabelTextBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.CheckBox.BorderBrush}" />
        <Setter Property="Margin" Value="2,2,2,2" />
    </Style>
    <!--#endregion-->

    <!--#region TextBox-->
    <ControlTemplate x:Key="Fluent.Ribbon.ControlTemplates.TextBox" TargetType="{x:Type source:RibbonSearchTextBox}">
        <Grid
            Width="Auto"
            Height="Auto"
            Background="Transparent">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <StackPanel
                x:Name="PART_HeaderAndIconPanel"
                Grid.Row="0"
                Grid.Column="0"
                Margin="0,0,4,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Orientation="Horizontal">
                <Image
                    x:Name="PART_IconImage"
                    Width="16"
                    Height="16"
                    Margin="3,0,0,0"
                    VerticalAlignment="Center"
                    IsEnabled="{TemplateBinding IsEnabled}"
                    Source="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}" />
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition SharedSizeGroup="{Binding Path=(Fluent:RibbonGroupBoxWrapPanel.SharedSizeGroupName), RelativeSource={RelativeSource TemplatedParent}}" />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        x:Name="PART_HeaderTextBlock"
                        Margin="5,0,0,0"
                        VerticalAlignment="Center"
                        Text="{TemplateBinding Header}"
                        TextWrapping="Wrap" />
                </Grid>
            </StackPanel>
            <Fluent:Button
                x:Name="PART_SearchButton"
                Grid.Row="1"
                Grid.RowSpan="2"
                Grid.Column="0"
                Height="40"
                Margin="0,0,3,0"
                Padding="0,0,10,0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Bottom"
                HorizontalContentAlignment="Stretch"
                VerticalContentAlignment="Center"
                BorderThickness="1"
                Command="{Binding Path=Command, RelativeSource={RelativeSource TemplatedParent}}"
                Header="{Binding Path=ButtonHeader, RelativeSource={RelativeSource TemplatedParent}}"
                Icon="{Binding Path=Icon, RelativeSource={RelativeSource TemplatedParent}}"
                LargeIcon="{Binding Path=LargeIcon, RelativeSource={RelativeSource TemplatedParent}}"
                SizeDefinition="Middle" />
            <Border
                x:Name="PART_ContentBorder"
                Grid.Row="0"
                Grid.RowSpan="3"
                Grid.Column="1"
                Width="{TemplateBinding InputWidth}"
                Height="Auto"
                HorizontalAlignment="Right"
                Background="{DynamicResource Fluent.Ribbon.Brushes.TextBox.Background}"
                BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.TextBox.BorderBrush}"
                BorderThickness="2">
                <ScrollViewer
                    x:Name="PART_ContentHost"
                    Margin="0"
                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="PART_IconImage" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="InputWidth" Value="NaN">
                <Setter TargetName="PART_ContentBorder" Property="HorizontalAlignment" Value="Stretch" />
            </Trigger>
            <Trigger Property="Size" Value="Middle">
                <Setter TargetName="PART_HeaderTextBlock" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="Size" Value="Small">
                <Setter TargetName="PART_HeaderAndIconPanel" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="PART_ContentBorder" Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.TextBox.Disabled.Background}" />
                <Setter TargetName="PART_ContentBorder" Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.TextBox.Disabled.BorderBrush}" />
                <Setter TargetName="PART_ContentHost" Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.TextBox.Disabled.Background}" />
                <Setter TargetName="PART_IconImage" Property="Opacity" Value="0.5" />
                <Setter TargetName="PART_SearchButton" Property="Opacity" Value="0.5" />
                <Setter TargetName="PART_SearchButton" Property="Effect">
                    <Setter.Value>
                        <Fluent:GrayscaleEffect />
                    </Setter.Value>
                </Setter>
                <Setter TargetName="PART_HeaderTextBlock" Property="Opacity" Value="0.5" />
                <Setter TargetName="PART_IconImage" Property="Effect">
                    <Setter.Value>
                        <Fluent:GrayscaleEffect />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="PART_ContentBorder" Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.TextBox.MouseOver.BorderBrush}" />
                <Setter TargetName="PART_ContentHost" Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.TextBox.MouseOver.Background}" />
                <Setter TargetName="PART_ContentBorder" Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.TextBox.MouseOver.Background}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter TargetName="PART_ContentBorder" Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.TextBox.MouseOver.BorderBrush}" />
                <Setter TargetName="PART_ContentHost" Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.TextBox.MouseOver.Background}" />
                <Setter TargetName="PART_ContentBorder" Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.TextBox.MouseOver.Background}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style BasedOn="{StaticResource {x:Type TextBoxBase}}" TargetType="{x:Type source:RibbonSearchTextBox}">
        <Setter Property="Template" Value="{DynamicResource Fluent.Ribbon.ControlTemplates.TextBox}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource ControlStyleEmptyFocus}" />
        <Setter Property="Foreground" Value="{DynamicResource Fluent.Ribbon.Brushes.LabelTextBrush}" />
        <Setter Property="CaretBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.TextBox.CaretBrush}" />
        <Setter Property="SelectionBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.TextBox.SelectionBrush}" />
    </Style>
    <!--#endregion-->

    <!--#region RadioButton-->

    <Style x:Key="{x:Type Fluent:RadioButton}" TargetType="{x:Type Fluent:RadioButton}">
        <Setter Property="ToolTipService.ShowDuration" Value="30000" />
        <Setter Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.CheckBox.Background}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.CheckBox.BorderBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource Fluent.Ribbon.Brushes.LabelTextBrush}" />
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <!--  ReSharper disable once Xaml.RedundantPropertyTypeQualifier  -->
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle
                                    Margin="1"
                                    SnapsToDevicePixels="true"
                                    Stroke="{DynamicResource BlackBrush}"
                                    StrokeDashArray="1 2"
                                    StrokeThickness="1" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Fluent:RadioButton}">
                    <BulletDecorator
                        x:Name="bulletDecorator"
                        Height="22"
                        Background="Transparent"
                        SnapsToDevicePixels="true">
                        <BulletDecorator.Bullet>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Image
                                    x:Name="PART_IconImage"
                                    Grid.Column="0"
                                    Width="16"
                                    Height="16"
                                    Margin="3,3,0,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    IsEnabled="{TemplateBinding IsEnabled}"
                                    Source="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}" />
                                <Grid
                                    Grid.Column="1"
                                    Width="12"
                                    Height="12"
                                    Margin="4,4,0,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center">
                                    <Rectangle Margin="-6,0" Fill="{DynamicResource TransparentWhiteBrush}" />
                                    <Ellipse
                                        x:Name="normal"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Stretch"
                                        Fill="{TemplateBinding Background}"
                                        Stroke="{TemplateBinding BorderBrush}"
                                        StrokeThickness="{TemplateBinding BorderThickness}" />
                                    <Ellipse
                                        x:Name="Checked1"
                                        Margin="3"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Stretch"
                                        Fill="{DynamicResource Fluent.Ribbon.Brushes.HighlightBrush}"
                                        Opacity="0" />
                                </Grid>
                            </Grid>
                        </BulletDecorator.Bullet>
                        <TextBlock Margin="8,3,4,0" Text="{TemplateBinding Header}" />
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="normal" Property="Stroke" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.BorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="normal" Property="Stroke" Value="{DynamicResource Fluent.Ribbon.Brushes.HighlightBrush}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Checked1" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="bulletDecorator" Property="Opacity" Value="0.3" />
                            <Setter TargetName="PART_IconImage" Property="Effect">
                                <Setter.Value>
                                    <Fluent:GrayscaleEffect />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#endregion-->

</ResourceDictionary>