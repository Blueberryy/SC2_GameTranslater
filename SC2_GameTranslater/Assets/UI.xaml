<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:SC2_GameTranslater.Assets"
    xmlns:fluent="clr-namespace:Fluent;assembly=Fluent"
    xmlns:converters="clr-namespace:Fluent.Converters;assembly=Fluent"
    xmlns:source="clr-namespace:SC2_GameTranslater.Source">
    <!--#region Converter-->
    <source:AutoNumberValueConverter x:Key="Converter_AutoNumberValue" />
    <source:EnumNameInLanguage_TextFileConverter x:Key="Converter_EnumNameInLanguage_File" />
    <!--#endregion-->

    <!--#region Template-->
    <ControlTemplate x:Key="RibbonGroupBoxDropDownButtonControlTemplate"
                     TargetType="{x:Type fluent:RibbonGroupBox}">
        <Grid Width="22">
            <Border x:Name="PART_ButtonBorder"
                    BorderThickness="1"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    Height="Auto"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Stretch">
                <ContentPresenter x:Name="iconImage"
                                  HorizontalAlignment="Center"
                                  Height="16"
                                  VerticalAlignment="Center"
                                  Content="{converters:ObjectToImageConverter {Binding Icon, RelativeSource={RelativeSource TemplatedParent}}, '16,16', {Binding RelativeSource={RelativeSource TemplatedParent}}}"
                                  Width="16"
                                  Margin="1,1,0,0"
                                  SnapsToDevicePixels="True" />
            </Border>

            <Popup x:Name="PART_Popup"
                   Placement="Bottom"
                   IsOpen="{TemplateBinding IsDropDownOpen}"
                   AllowsTransparency="True"
                   Focusable="False"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                   Margin="0,0,-4,0"
                   VerticalAlignment="Top"
                   Grid.ColumnSpan="2">
                <Grid Width="Auto"
                      Height="Auto"
                      Margin="0,20">
                    <Border x:Name="border"
                            Height="Auto"
                            Background="{DynamicResource fluent.Ribbon.Brushes.Ribbon.Background}"
                            BorderBrush="{DynamicResource fluent.Ribbon.Brushes.RibbonTabItem.BorderBrush}"
                            BorderThickness="1"
                            d:LayoutOverrides="Width">
                        <Grid x:Name="PART_ParentPanel"
                              Margin="0,1,0,2"
                              Height="85">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <fluent:RibbonGroupBoxWrapPanel x:Name="PART_UpPanel"
                                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                            VerticalAlignment="Stretch"
                                                            Width="Auto"
                                                            Height="Auto"
                                                            IsItemsHost="True"
                                                            Margin="2,0,4,0" />

                            <Grid x:Name="PART_DownGrid"
                                  Margin="0,-2,2,2"
                                  Grid.Row="1"
                                  VerticalAlignment="Bottom"
                                  Height="Auto"
                                  MaxWidth="{Binding ActualWidth, ElementName=PART_UpPanel}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <ContentControl Content="{TemplateBinding Header}"
                                                ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                                ContentTemplate="{TemplateBinding HeaderTemplate}"
                                                ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"                                                
                                                HorizontalAlignment="Stretch"
                                                VerticalAlignment="Center"
                                                Margin="2,0"
                                                KeyboardNavigation.IsTabStop="False" />

                                <fluent:Button Margin="0,0,1,1"
                                               x:Name="PART_DialogLauncherButton"
                                               HorizontalAlignment="Stretch"
                                               Width="15"
                                               Height="14"
                                               Grid.Column="1"
                                               Focusable="False"
                                               IsTabStop="False"
                                               Template="{DynamicResource DialogLauncherButtonControlTemplate}"
                                               Background="Transparent"
                                               BorderBrush="Transparent"
                                               VerticalAlignment="Bottom"
                                               Icon="{TemplateBinding LauncherIcon}"
                                               Header="{TemplateBinding LauncherText}"
                                               Command="{Binding LauncherCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                               CommandTarget="{Binding LauncherCommandTarget, RelativeSource={RelativeSource TemplatedParent}}"
                                               CommandParameter="{Binding LauncherCommandParameter, RelativeSource={RelativeSource TemplatedParent}}"
                                               ToolTip="{Binding LauncherToolTip, RelativeSource={RelativeSource TemplatedParent}}"
                                               IsEnabled="{Binding IsLauncherEnabled, RelativeSource={RelativeSource TemplatedParent}}" />
                            </Grid>
                        </Grid>
                    </Border>
                </Grid>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsDropDownOpen"
                     Value="True">
                <Setter Property="BorderBrush"
                        TargetName="PART_ButtonBorder"
                        Value="{DynamicResource fluent.Ribbon.Brushes.Button.Pressed.BorderBrush}" />
                <Setter Property="Background"
                        TargetName="PART_ButtonBorder"
                        Value="{DynamicResource fluent.Ribbon.Brushes.Button.Pressed.Background}" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter Property="Opacity"
                        TargetName="iconImage"
                        Value="0.5" />
                <Setter Property="Effect"
                        TargetName="iconImage">
                    <Setter.Value>
                        <fluent:GrayscaleEffect />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver"
                               Value="True" />
                    <Condition Property="IsDropDownOpen"
                               Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Background"
                        TargetName="PART_ButtonBorder"
                        Value="{DynamicResource fluent.Ribbon.Brushes.Button.MouseOver.Background}" />
                <Setter Property="BorderBrush"
                        TargetName="PART_ButtonBorder"
                        Value="{DynamicResource fluent.Ribbon.Brushes.Button.MouseOver.BorderBrush}" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion-->

</ResourceDictionary>