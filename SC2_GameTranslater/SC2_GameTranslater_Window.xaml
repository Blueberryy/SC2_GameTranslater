<fluent:RibbonWindow
    x:Class="SC2_GameTranslater.SC2_GameTranslater_Window"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="clr-namespace:SC2_GameTranslater"
    xmlns:source="clr-namespace:SC2_GameTranslater.Source"
    xmlns:Avalon="http://icsharpcode.net/sharpdevelop/avalonedit"
    xmlns:fluent="urn:fluent-ribbon"
    mc:Ignorable="d"
    Icon="pack://application:,,,/Assets/Image/Icon.ico"
    Height="450" Width="800" Name="RibbonWindow_Main">
    <Window.Resources>
        <ResourceDictionary x:Name="ResourceDictionary_WindowLanguage">
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Language/zhCN.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <Grid Name="Grid_Main">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="3*" />
            <RowDefinition Height="2*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <fluent:Ribbon Name="Ribbon_Main" Grid.Row="0" Grid.ColumnSpan="2">
            <fluent:Ribbon.Menu>
                <fluent:Backstage Header="{DynamicResource ResourceKey=UI_Backstage_Menu_Header}">
                    <fluent:BackstageTabControl>
                        <fluent:Button x:Name="RibbonButton_MenuOpen" Header="{DynamicResource ResourceKey=UI_RibbonButton_Open_Header}" Command="{Binding ElementName=RibbonWindow_Main,Path=CommandOpen}"/>
                        <Separator />
                        <fluent:Button x:Name="RibbonButton_MenuSave" Header="{DynamicResource ResourceKey=UI_RibbonButton_Save_Header}" Command="{Binding ElementName=RibbonWindow_Main,Path=CommandSave}"/>
                        <Separator />
                        <fluent:Button x:Name="RibbonButton_MenuSaveAs" Header="{DynamicResource ResourceKey=UI_RibbonButton_SaveAs_Header}" Command="{Binding ElementName=RibbonWindow_Main,Path=CommandSaveAs}"/>
                        <Separator />
                        <fluent:Button x:Name="RibbonButton_MenuAccept" Header="{DynamicResource ResourceKey=UI_RibbonButton_Accept_Header}" Command="{Binding ElementName=RibbonWindow_Main,Path=CommandAccept}"/>
                        <Separator />
                        <fluent:Button x:Name="RibbonButton_MenuClose" Header="{DynamicResource ResourceKey=UI_RibbonButton_Close_Header}" Command="{Binding ElementName=RibbonWindow_Main,Path=CommandClose}"/>
                        <Separator />
                        <fluent:BackstageTabItem x:Name="BackstageTabItem_Preference" Header="{DynamicResource ResourceKey=UI_BackstageTabItem_Preference_Header}" KeyTip="P">
                            <ScrollViewer Name="ScrollViewer_Preference">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <GroupBox Name="GroupBox_Language" Grid.Row="0" Margin="3">
                                        <GroupBox.Header>
                                            <Label>
                                                <TextBlock Text="{DynamicResource ResourceKey=UI_GroupBox_Language_Header}"/>
                                            </Label>
                                        </GroupBox.Header>
                                        <ComboBox Name="ComboBox_Language" Margin="3" SelectionChanged="ComboBox_Language_SelectionChanged"/>
                                    </GroupBox>
                                    <GroupBox Name="GroupBox_ModPath" Grid.Row="1">
                                        <GroupBox.Header>
                                            <Label>
                                                <TextBlock Text="{DynamicResource ResourceKey=UI_GroupBox_ModPath_Header}"/>
                                            </Label>
                                        </GroupBox.Header>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="80"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBox Name="TextBox_ModPath" Grid.Column="0" VerticalContentAlignment="Center" HorizontalAlignment="Stretch" MinWidth="50" Margin="3" IsReadOnly="True"/>
                                            <Button Name="Button_SelectModPath" Grid.Column="1" Margin="3" Padding="3" Content="{DynamicResource UI_Button_SelectModPath_Content}" Command="{Binding ElementName=RibbonWindow_Main,Path=CommandModPath}"/>
                                        </Grid>
                                    </GroupBox>
                                </Grid>
                            </ScrollViewer>
                        </fluent:BackstageTabItem>
                    </fluent:BackstageTabControl>
                </fluent:Backstage>
            </fluent:Ribbon.Menu>
            <fluent:RibbonTabItem Name="RibbonTabItem_Start" Header="{DynamicResource ResourceKey=UI_RibbonTabItem_Start_Header}">
                <fluent:RibbonGroupBox Name="RibbonGroupBox_File" Header="{DynamicResource ResourceKey=UI_RibbonGroupBox_File_Header}" Grid.IsSharedSizeScope="True">
                    <fluent:Button x:Name="RibbonButton_Open" Header="{DynamicResource ResourceKey=UI_RibbonButton_Open_Header}" Icon="{StaticResource ResourceKey=IMAGE_Open}" LargeIcon="{StaticResource ResourceKey=IMAGE_Open}" KeyTip="O" Command="{Binding ElementName=RibbonWindow_Main,Path=CommandOpen}"/>
                    <Separator />
                    <fluent:Button x:Name="RibbonButton_Save" Header="{DynamicResource ResourceKey=UI_RibbonButton_Save_Header}" Icon="{StaticResource ResourceKey=IMAGE_Save}" LargeIcon="{StaticResource ResourceKey=IMAGE_Save}" KeyTip="S"  Command="{Binding ElementName=RibbonWindow_Main,Path=CommandSave}"/>
                    <Separator />
                    <fluent:Button x:Name="RibbonButton_Reload" Header="{DynamicResource ResourceKey=UI_RibbonButton_Reload_Header}" Icon="{StaticResource ResourceKey=IMAGE_Reload}" LargeIcon="{StaticResource ResourceKey=IMAGE_Reload}" KeyTip="R"  Command="{Binding ElementName=RibbonWindow_Main,Path=CommandReload}"/>
                    <Separator />
                    <fluent:Button x:Name="RibbonButton_Accept" Header="{DynamicResource ResourceKey=UI_RibbonButton_Accept_Header}" Icon="{StaticResource ResourceKey=IMAGE_Accept}" LargeIcon="{StaticResource ResourceKey=IMAGE_Accept}" KeyTip="E"  Command="{Binding ElementName=RibbonWindow_Main,Path=CommandAccept}"/>
                    <Separator />
                    <fluent:Button x:Name="RibbonButton_Close" Header="{DynamicResource ResourceKey=UI_RibbonButton_Close_Header}" Icon="{StaticResource ResourceKey=IMAGE_Close}" LargeIcon="{StaticResource ResourceKey=IMAGE_Close}" KeyTip="S"  Command="{Binding ElementName=RibbonWindow_Main,Path=CommandClose}"/>
                    <Separator />
                </fluent:RibbonGroupBox>
                <fluent:RibbonGroupBox Name="RibbonGroupBox_TranslateLanguage" Header="{DynamicResource ResourceKey=UI_RibbonGroupBox_TranslateLanguage_Header}"  Grid.IsSharedSizeScope="True">
                    <fluent:ComboBox Name="ComboBox_SourceLanguage" ItemsSource="{Binding ElementName=RibbonWindow_Main,Path=SourceLanguage}" Header="{DynamicResource ResourceKey=UI_ComboBox_SourceLanguage_Header}" VerticalContentAlignment="Center" IsEditable="False" MinWidth="50" SelectedIndex="0"/>
                    <fluent:ComboBox Name="ComboBox_TargetLanguage" ItemsSource="{Binding ElementName=RibbonWindow_Main,Path=TargetLanguage}" Header="{DynamicResource ResourceKey=UI_ComboBox_SourceLanguage_Header}" VerticalContentAlignment="Center" IsEditable="False" MinWidth="50"  SelectedIndex="0"/>
                </fluent:RibbonGroupBox>
            </fluent:RibbonTabItem>
        </fluent:Ribbon>
        <GroupBox Name="GroupBox_Log" Grid.Row="2" Header="{DynamicResource UI_LogGroupBox_Header}" Margin="3">
            <Avalon:TextEditor Name="AvalonTextEditor_Log" ShowLineNumbers="True" WordWrap="True" Margin="3" IsReadOnly="True">
                <Avalon:TextEditor.ContextMenu>
                    <ContextMenu>
                        <MenuItem Name="MenuItem_LogClear" Header="{DynamicResource UI_MenuItem_LogClear_Header}" />
                    </ContextMenu>
                </Avalon:TextEditor.ContextMenu>
            </Avalon:TextEditor>
        </GroupBox>
        <StatusBar Name="StatusBar_Below" Grid.Row="3">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" VerticalAlignment="Stretch" Grid.Column="0">
                <ProgressBar Name="ProgressBar_Loading" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Visibility="Hidden" Margin="3"/>
            </StatusBarItem>
            <StatusBarItem  HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" VerticalAlignment="Stretch" Grid.Column="1">
                <TextBlock Name="TextBlock_ProgressMsg" Visibility="Hidden" Margin="3"/>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</fluent:RibbonWindow>
