<Fluent:RibbonWindow
    x:Class="SC2_GameTranslater.SC2_GameTranslater_Window"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Fluent="urn:fluent-ribbon"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:SC2_GameTranslater"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:source="clr-namespace:SC2_GameTranslater.Source"
    Name="RibbonWindow_Main"
    Width="1600"
    Height="900"
    Closing="RibbonWindow_Main_Closing"
    Icon="pack://application:,,,/Assets/Image/Icon.ico"
    WindowStartupLocation="CenterScreen"
    mc:Ignorable="d">
    <Window.Resources>
        <ResourceDictionary x:Name="ResourceDictionary_WindowLanguage">
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Language/zhCN.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <Grid Name="Grid_Main">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="3*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="2*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Fluent:Ribbon
            Name="Ribbon_Main"
            Grid.Row="0"
            Grid.ColumnSpan="2"
            AutomaticStateManagement="False"
            IsAutomaticCollapseEnabled="True"
            SelectedTabIndex="0">
            <Fluent:Ribbon.Menu>
                <Fluent:Backstage Name="Backstage_Menu" Header="{DynamicResource UI_Backstage_Menu_Header}">
                    <Fluent:BackstageTabControl>
                        <Fluent:SeparatorTabItem
                            Name="SeparatorTabItem_Projects"
                            Margin="0,0,0,0"
                            HorizontalContentAlignment="Left"
                            Header="{DynamicResource UI_SeparatorTabItem_Projects_Header}" />
                        <Fluent:Button
                            x:Name="RibbonButton_MenuNew"
                            Command="{Binding ElementName=RibbonWindow_Main, Path=CommandNew}"
                            Header="{DynamicResource UI_RibbonButton_New_Header}"
                            Icon="{StaticResource ResourceKey=IMAGE_New}" />
                        <Fluent:Button
                            x:Name="RibbonButton_MenuOpen"
                            Command="{Binding ElementName=RibbonWindow_Main, Path=CommandOpen}"
                            Header="{DynamicResource UI_RibbonButton_Open_Header}"
                            Icon="{StaticResource ResourceKey=IMAGE_Open}" />
                        <Fluent:Button
                            x:Name="RibbonButton_MenuSave"
                            Command="{Binding ElementName=RibbonWindow_Main, Path=CommandSave}"
                            Header="{DynamicResource UI_RibbonButton_Save_Header}"
                            Icon="{StaticResource ResourceKey=IMAGE_Save}" />
                        <Fluent:Button
                            x:Name="RibbonButton_MenuSaveAs"
                            Command="{Binding ElementName=RibbonWindow_Main, Path=CommandSaveAs}"
                            Header="{DynamicResource UI_RibbonButton_SaveAs_Header}"
                            Icon="{StaticResource ResourceKey=IMAGE_Save}" />
                        <Fluent:Button
                            x:Name="RibbonButton_MenuClose"
                            Command="{Binding ElementName=RibbonWindow_Main, Path=CommandClose}"
                            Header="{DynamicResource UI_RibbonButton_Close_Header}"
                            Icon="{StaticResource ResourceKey=IMAGE_Close}" />
                        <Fluent:Button
                            x:Name="RibbonButton_MenuAccept"
                            Command="{Binding ElementName=RibbonWindow_Main, Path=CommandAccept}"
                            Header="{DynamicResource UI_RibbonButton_Accept_Header}"
                            Icon="{StaticResource ResourceKey=IMAGE_Accept}" />
                        <Fluent:SeparatorTabItem
                            Name="SeparatorTabItem_RecentProjects"
                            Margin="0,20,0,0"
                            HorizontalContentAlignment="Left"
                            Header="{DynamicResource UI_SeparatorTabItem_RecentProjects_Header}" />
                        <Fluent:BackstageTabItem x:Name="BackstageTabItem_MenuRecentProjects" Header="{DynamicResource UI_BackstageTabItem_MenuRecentProjects_Header}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Label Grid.Row="0">
                                    <TextBlock
                                        Name="TextBlock_RecentProjects"
                                        Margin="3"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        FontSize="20"
                                        FontWeight="Bold"
                                        Text="{DynamicResource UI_TextBlock_RecentProjects_Text}" />
                                </Label>
                                <Separator Grid.Row="1" />
                                <ItemsControl
                                    Name="ItemsControl_RecentFiles"
                                    Grid.Row="2"
                                    Margin="3"
                                    BorderThickness="0" />
                            </Grid>
                        </Fluent:BackstageTabItem>
                        <Fluent:SeparatorTabItem
                            Name="SeparatorTabItem_Preferences"
                            Margin="0,20,0,0"
                            HorizontalContentAlignment="Left"
                            Header="{DynamicResource UI_SeparatorTabItem_Preferences_Header}" />
                        <Fluent:BackstageTabItem
                            x:Name="BackstageTabItem_Preference"
                            Header="{DynamicResource UI_BackstageTabItem_Preference_Header}"
                            KeyTip="P">
                            <ScrollViewer Name="ScrollViewer_Preference">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Label Grid.Row="0">
                                        <TextBlock
                                            Name="TextBlock_Preference"
                                            Margin="3"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Center"
                                            FontSize="20"
                                            FontWeight="Bold"
                                            Text="{DynamicResource UI_TextBlock_Preference_Text}" />
                                    </Label>
                                    <Separator Grid.Row="1" />
                                    <GroupBox
                                        Name="GroupBox_Language"
                                        Grid.Row="2"
                                        Margin="3">
                                        <GroupBox.Header>
                                            <Label>
                                                <TextBlock Text="{DynamicResource UI_GroupBox_Language_Header}" />
                                            </Label>
                                        </GroupBox.Header>
                                        <ComboBox
                                            Name="ComboBox_Language"
                                            Margin="3"
                                            SelectionChanged="ComboBox_Language_SelectionChanged" />
                                    </GroupBox>
                                    <GroupBox Name="GroupBox_ComponentsPath" Grid.Row="3">
                                        <GroupBox.Header>
                                            <Label>
                                                <TextBlock Text="{DynamicResource UI_GroupBox_ComponentsPath_Header}" />
                                            </Label>
                                        </GroupBox.Header>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="80" />
                                            </Grid.ColumnDefinitions>
                                            <TextBox
                                                Name="TextBox_ComponentsPath"
                                                Grid.Column="0"
                                                MinWidth="50"
                                                Margin="3"
                                                HorizontalAlignment="Stretch"
                                                VerticalContentAlignment="Center"
                                                IsReadOnly="True" />
                                            <Button
                                                Name="Button_SelectComponentsPath"
                                                Grid.Column="1"
                                                Margin="3"
                                                Padding="3"
                                                Command="{Binding ElementName=RibbonWindow_Main, Path=CommandComponentsPath}"
                                                Content="{DynamicResource UI_Button_SelectComponentsPath_Content}" />
                                        </Grid>
                                    </GroupBox>
                                </Grid>
                            </ScrollViewer>
                        </Fluent:BackstageTabItem>
                    </Fluent:BackstageTabControl>
                </Fluent:Backstage>
            </Fluent:Ribbon.Menu>
            <Fluent:Ribbon.ToolBarItems>
                <Fluent:Button Icon="{DynamicResource IMAGE_HELP}" Size="Small">
                    <!--<Fluent:Button.ToolTip>
                        <Fluent:ScreenTip Title="Insert Chart"
                                          Text="Insert a chart to illustarate and compare data. &#xa;&#xa;Bar, Pie, Line, Area and Surface are same of the available types."
                                          HelpTopic="https://github.com/fluentribbon/Fluent.Ribbon"
                                          DisableReason="Disable reason reason."
                                          Width="190"
                                          IsRibbonAligned="True" />
                    </Fluent:Button.ToolTip>-->
                </Fluent:Button>
            </Fluent:Ribbon.ToolBarItems>
            <Fluent:Ribbon.QuickAccessItems>
                <Fluent:QuickAccessMenuItem IsChecked="True" Target="{Binding Source={x:Reference RibbonButton_New}}" />
                <Fluent:QuickAccessMenuItem IsChecked="True" Target="{Binding Source={x:Reference RibbonButton_Open}}" />
                <Fluent:QuickAccessMenuItem IsChecked="True" Target="{Binding Source={x:Reference RibbonButton_Save}}" />
                <Fluent:QuickAccessMenuItem IsChecked="True" Target="{Binding Source={x:Reference RibbonButton_Close}}" />
                <Fluent:QuickAccessMenuItem IsChecked="True" Target="{Binding Source={x:Reference RibbonButton_FilterPrev}}" />
                <Fluent:QuickAccessMenuItem IsChecked="True" Target="{Binding Source={x:Reference RibbonButton_FilterNext}}" />
            </Fluent:Ribbon.QuickAccessItems>
            <Fluent:RibbonTabItem Name="RibbonTabItem_Start" Header="{DynamicResource UI_RibbonTabItem_Start_Header}">
                <Fluent:RibbonGroupBox
                    Name="RibbonGroupBox_File"
                    Width="Auto"
                    Grid.IsSharedSizeScope="True"
                    Header="{DynamicResource UI_RibbonGroupBox_File_Header}">
                    <Fluent:SplitButton
                        x:Name="RibbonButton_Open"
                        Command="{Binding ElementName=RibbonWindow_Main, Path=CommandOpen}"
                        Header="{DynamicResource UI_RibbonButton_Open_Header}"
                        Icon="{StaticResource ResourceKey=IMAGE_Open}"
                        KeyTip="O"
                        LargeIcon="{StaticResource ResourceKey=IMAGE_Open}">
                        <Fluent:Button
                            x:Name="RibbonButton_New"
                            Command="{Binding ElementName=RibbonWindow_Main, Path=CommandNew}"
                            Header="{DynamicResource UI_RibbonButton_New_Header}"
                            Icon="{StaticResource ResourceKey=IMAGE_New}"
                            KeyTip="N"
                            LargeIcon="{StaticResource ResourceKey=IMAGE_New}" />
                    </Fluent:SplitButton>
                    <Fluent:SplitButton
                        x:Name="RibbonButton_Save"
                        Command="{Binding ElementName=RibbonWindow_Main, Path=CommandSave}"
                        Header="{DynamicResource UI_RibbonButton_Save_Header}"
                        Icon="{StaticResource ResourceKey=IMAGE_Save}"
                        KeyTip="S"
                        LargeIcon="{StaticResource ResourceKey=IMAGE_Save}">
                        <Fluent:Button
                            x:Name="RibbonButton_SaveAs"
                            Command="{Binding ElementName=RibbonWindow_Main, Path=CommandSaveAs}"
                            Header="{DynamicResource UI_RibbonButton_SaveAs_Header}"
                            Icon="{StaticResource ResourceKey=IMAGE_Save}"
                            KeyTip="S"
                            LargeIcon="{StaticResource ResourceKey=IMAGE_Save}" />
                    </Fluent:SplitButton>
                    <Fluent:Button
                        x:Name="RibbonButton_Close"
                        Command="{Binding ElementName=RibbonWindow_Main, Path=CommandClose}"
                        Header="{DynamicResource UI_RibbonButton_Close_Header}"
                        Icon="{StaticResource ResourceKey=IMAGE_Close}"
                        KeyTip="S"
                        LargeIcon="{StaticResource ResourceKey=IMAGE_Close}" />
                    <Separator />
                    <Fluent:Button
                        x:Name="RibbonButton_Accept"
                        Command="{Binding ElementName=RibbonWindow_Main, Path=CommandAccept}"
                        Header="{DynamicResource UI_RibbonButton_Accept_Header}"
                        Icon="{StaticResource ResourceKey=IMAGE_Accept}"
                        KeyTip="E"
                        LargeIcon="{StaticResource ResourceKey=IMAGE_Accept}" />
                    <Fluent:SplitButton
                        Name="SplitButton_ReloadTranslate"
                        Command="{Binding ElementName=RibbonWindow_Main, Path=CommandReloadTranslate}"
                        Header="{DynamicResource UI_RibbonButton_ReloadTranslate_Header}"
                        Icon="{StaticResource ResourceKey=IMAGE_Reload}"
                        LargeIcon="{StaticResource ResourceKey=IMAGE_Reload}">
                        <Fluent:Button
                            Name="SplitButton_ReloadSC2"
                            Command="{Binding ElementName=RibbonWindow_Main, Path=CommandReloadSC2}"
                            Header="{DynamicResource UI_RibbonButton_ReloadSC2_Header}"
                            Icon="{StaticResource ResourceKey=IMAGE_Reload}"
                            LargeIcon="{StaticResource ResourceKey=IMAGE_Reload}" />
                    </Fluent:SplitButton>
                    <Separator />
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox
                    Name="RibbonGroupBox_FilterRecord"
                    Width="Auto"
                    Grid.IsSharedSizeScope="True"
                    Header="{DynamicResource UI_RibbonGroupBox_FilterRecord_Header}">
                    <Fluent:Button
                        x:Name="RibbonButton_FilterPrev"
                        Command="{Binding ElementName=RibbonWindow_Main, Path=FilterRecordPrev}"
                        Header="{DynamicResource UI_RibbonButton_FilterPrev_Header}"
                        Icon="{StaticResource ResourceKey=IMAGE_FilterPrev}"
                        KeyTip="+"
                        LargeIcon="{StaticResource ResourceKey=IMAGE_FilterPrev}" />
                    <Fluent:Button
                        x:Name="RibbonButton_FilterNext"
                        Command="{Binding ElementName=RibbonWindow_Main, Path=FilterRecordNext}"
                        Header="{DynamicResource UI_RibbonButton_FilterNext_Header}"
                        Icon="{StaticResource ResourceKey=IMAGE_FilterNext}"
                        KeyTip="-"
                        LargeIcon="{StaticResource ResourceKey=IMAGE_FilterNext}" />
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox
                    Name="RibbonGroupBox_TranslateLanguage"
                    Grid.IsSharedSizeScope="True"
                    Header="{DynamicResource UI_RibbonGroupBox_TranslateLanguage_Header}">
                    <Fluent:InRibbonGallery
                        Name="InRibbonGallery_TranslateLanguage"
                        MinWidth="120"
                        CanCollapseToButton="False"
                        Header="{DynamicResource UI_InRibbonGallery_TranslateLanguage_Header}"
                        IsCollapsed="False"
                        MaxItemsInDropDownRow="3"
                        MaxItemsInRow="3"
                        MinItemsInDropDownRow="1"
                        MinItemsInRow="1"
                        Orientation="Horizontal"
                        ResizeMode="Both"
                        SizeDefinition="Large">
                        <Fluent:InRibbonGallery.ItemContainerStyle>
                            <Style TargetType="{x:Type Fluent:GalleryItem}">
                                <Setter Property="PreviewCommand" Value="{Binding DataContext.(Fluent:GalleryItem.PreviewCommand), RelativeSource={RelativeSource AncestorType={x:Type Fluent:InRibbonGallery}}}" />
                                <Setter Property="CancelPreviewCommand" Value="{Binding DataContext.(Fluent:GalleryItem.CancelPreviewCommand), RelativeSource={RelativeSource AncestorType={x:Type Fluent:InRibbonGallery}}}" />
                            </Style>
                        </Fluent:InRibbonGallery.ItemContainerStyle>
                    </Fluent:InRibbonGallery>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox
                    Name="RibbonGroupBox_Search"
                    Fluent:RibbonGroupBoxWrapPanel.SharedSizeGroupName="Group_Serach"
                    FlowDirection="LeftToRight"
                    Grid.IsSharedSizeScope="True"
                    Header="{DynamicResource UI_RibbonGroupBox_Search_Header}">
                    <Fluent:ComboBox
                        Name="ComboBox_SearchType"
                        Header="{DynamicResource UI_ComboBox_SearchType_Header}"
                        Icon="{StaticResource ResourceKey=IMAGE_SearchComboBox}"
                        IsEditable="False"
                        SelectedIndex="0">
                        <ComboBoxItem
                            Name="ComboBoxItem_SearchTypeAll"
                            Content="{DynamicResource UI_ComboBoxItem_SearchTypeALL_Header}"
                            Tag="{x:Static local:EnumSearchTextType.All}" />
                        <ComboBoxItem
                            Name="ComboBoxItem_SearchTypeTextID"
                            Content="{DynamicResource UI_ComboBoxItem_SearchTypeTextID_Header}"
                            Tag="{x:Static local:EnumSearchTextType.ID}" />
                        <ComboBoxItem
                            Name="ComboBoxItem_SearchTypeAllText"
                            Content="{DynamicResource UI_ComboBoxItem_SearchTypeALLText_Header}"
                            Tag="{x:Static local:EnumSearchTextType.AllText}" />
                        <ComboBoxItem
                            Name="ComboBoxItem_SearchTypeSourceText"
                            Content="{DynamicResource UI_ComboBoxItem_SearchTypeSourceText_Header}"
                            Tag="{x:Static local:EnumSearchTextType.Source}" />
                        <ComboBoxItem
                            Name="ComboBoxItem_SearchTypeDropedText"
                            Content="{DynamicResource UI_ComboBoxItem_SearchTypeDropedText_Header}"
                            Tag="{x:Static local:EnumSearchTextType.Droped}" />
                        <ComboBoxItem
                            Name="ComboBoxItem_SearchTypeEditedText"
                            Content="{DynamicResource UI_ComboBoxItem_SearchTypeEditedText_Header}"
                            Tag="{x:Static local:EnumSearchTextType.Edited}" />
                    </Fluent:ComboBox>
                    <Fluent:ComboBox
                        Name="ComboBox_SearchLocation"
                        Height="22"
                        VerticalAlignment="Bottom"
                        Fluent:RibbonGroupBoxWrapPanel.SharedSizeGroupName="Group_Serach"
                        Header="{DynamicResource UI_ComboBox_SearchLcation_Header}"
                        Icon="{StaticResource ResourceKey=IMAGE_SearchComboBox}"
                        IsEditable="False"
                        SelectedIndex="0">
                        <Fluent:ComboBox.IsEnabled>
                            <MultiBinding Converter="{StaticResource Converter_SerachLocationByRegexControl}">
                                <Binding ElementName="RadioButton_SearchRegex" Path="IsEnabled" />
                                <Binding ElementName="RadioButton_SearchRegex" Path="IsChecked" />
                            </MultiBinding>
                        </Fluent:ComboBox.IsEnabled>
                        <ComboBoxItem
                            Name="ComboBoxItem_SearchLocationAll"
                            Content="{DynamicResource UI_ComboBoxItem_SearchLocationALL_Header}"
                            Tag="{x:Static local:EnumSearchTextLocation.All}" />
                        <ComboBoxItem
                            Name="ComboBoxItem_SearchLocationLeft"
                            Content="{DynamicResource UI_ComboBoxItem_SearchLocationLeft_Header}"
                            Tag="{x:Static local:EnumSearchTextLocation.Left}" />
                        <ComboBoxItem
                            Name="ComboBoxItem_SearchLocationRight"
                            Content="{DynamicResource UI_ComboBoxItem_SearchLocationRight_Header}"
                            Tag="{x:Static local:EnumSearchTextLocation.Right}" />
                    </Fluent:ComboBox>
                    <Fluent:CheckBox
                        Name="CheckBox_SearchCase"
                        HorizontalAlignment="Left"
                        VerticalContentAlignment="Center"
                        Header="{DynamicResource UI_CheckBox_SearchCase_Header}"
                        Icon="{StaticResource ResourceKey=IMAGE_SearchConfigure}" />
                    <Fluent:RadioButton
                        Name="RadioButton_SearchNull"
                        HorizontalAlignment="Left"
                        VerticalContentAlignment="Center"
                        GroupName="SerachConfigure"
                        Header="{DynamicResource UI_RadioButton_SearchNull_Header}"
                        Icon="{StaticResource ResourceKey=IMAGE_SearchConfigure}"
                        IsChecked="True" />
                    <Fluent:RadioButton
                        Name="RadioButton_SearchRegex"
                        HorizontalAlignment="Left"
                        VerticalContentAlignment="Center"
                        GroupName="SerachConfigure"
                        Header="{DynamicResource UI_RadioButton_SearchRegex_Header}"
                        Icon="{StaticResource ResourceKey=IMAGE_SearchConfigure}" />
                    <Fluent:RadioButton
                        Name="RadioButton_SearchText"
                        HorizontalAlignment="Left"
                        VerticalContentAlignment="Center"
                        GroupName="SerachConfigure"
                        Header="{DynamicResource UI_RadioButton_SearchText_Header}"
                        Icon="{StaticResource ResourceKey=IMAGE_SearchConfigure}" />
                    <source:RibbonSearchTextBox
                        x:Name="TextBox_SearchText"
                        Height="65"
                        MinWidth="300"
                        HorizontalContentAlignment="Left"
                        VerticalContentAlignment="Top"
                        Fluent:RibbonGroupBoxWrapPanel.SharedSizeGroupName="Group_Serach"
                        AcceptsReturn="True"
                        ButtonContent="{DynamicResource UI_TextBox_SearchText_ButtonContent}"
                        Command="{Binding ElementName=RibbonWindow_Main, Path=SearchClick}"
                        Header="{DynamicResource UI_ComboBox_SearchText_Header}"
                        Icon="{StaticResource ResourceKey=IMAGE_SearchTextBox}"
                        TextWrapping="WrapWithOverflow"
                        VerticalScrollBarVisibility="Auto" />
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox
                    Name="RibbonGroupBox_GalaxyFilter"
                    Grid.IsSharedSizeScope="True"
                    Header="{DynamicResource UI_RibbonGroupBox_GalaxyFilter_Header}">
                    <Fluent:InRibbonGallery
                        Name="InRibbonGallery_GalaxyFilter"
                        MinWidth="100"
                        CanCollapseToButton="False"
                        Header="{DynamicResource UI_InRibbonGallery_GalaxyFilter_Header}"
                        IsCollapsed="False"
                        MaxItemsInDropDownRow="1"
                        MinItemsInDropDownRow="1"
                        Orientation="Vertical"
                        ResizeMode="Both"
                        Selectable="False">
                        <Fluent:InRibbonGallery.Menu>
                            <Fluent:RibbonMenu>
                                <Fluent:MenuItem
                                    Name="MenuItem_GalaxyFilterSelectAll"
                                    Click="MenuItem_GalaxyFilterSelectAll_Click"
                                    Header="{DynamicResource TEXT_SelectALL}" />
                                <Fluent:MenuItem
                                    Name="MenuItem_GalaxyFilterSelectNone"
                                    Click="MenuItem_GalaxyFilterSelectNone_Click"
                                    Header="{DynamicResource TEXT_SelectNone}" />
                            </Fluent:RibbonMenu>
                        </Fluent:InRibbonGallery.Menu>
                        <Fluent:ToggleButton
                            Name="ToggleButton_FilterGalaxyFileNone"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Top"
                            VerticalContentAlignment="Center"
                            Checked="ToggleButton_FilterGalaxyButton_CheckEvent"
                            Header="{DynamicResource UI_ToggleButton_FilterGalaxyFileNone_Header}"
                            Icon="{StaticResource ResourceKey=IMAGE_GalaxyNone}"
                            SizeDefinition="Middle"
                            Tag="{x:Static source:Class_Globals.Const_NoUseInGalaxy}"
                            ToolTip="{DynamicResource TP_ToggleButton_FilterGalaxyFileNone_ToolTip}"
                            Unchecked="ToggleButton_FilterGalaxyButton_CheckEvent" />
                    </Fluent:InRibbonGallery>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox
                    Name="RibbonGroupBox_TextFileFilter"
                    Grid.IsSharedSizeScope="True"
                    Header="{DynamicResource UI_RibbonGroupBox_TextFileFilter_Header}">
                    <Fluent:InRibbonGallery
                        Name="InRibbonGallery_TextFileFilter"
                        MinWidth="100"
                        CanCollapseToButton="False"
                        Header="{DynamicResource UI_InRibbonGallery_TextFileFilter_Header}"
                        IsCollapsed="False"
                        MaxItemsInDropDownRow="1"
                        MinItemsInDropDownRow="1"
                        Orientation="Vertical"
                        ResizeMode="Both"
                        Selectable="False">
                        <Fluent:InRibbonGallery.Menu>
                            <Fluent:RibbonMenu>
                                <Fluent:MenuItem
                                    Name="MenuItem_TextFileFilterSelectAll"
                                    Click="MenuItem_TextFileFilterSelectAll_Click"
                                    Header="{DynamicResource TEXT_SelectALL}" />
                                <Fluent:MenuItem
                                    Name="MenuItem_TextFileFilterSelectNone"
                                    Click="MenuItem_TextFileFilterSelectNone_Click"
                                    Header="{DynamicResource TEXT_SelectNone}" />
                            </Fluent:RibbonMenu>
                        </Fluent:InRibbonGallery.Menu>
                        <Fluent:ToggleButton
                            Name="ToggleButton_TextFileFilterGameStrings"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Top"
                            VerticalContentAlignment="Center"
                            Checked="ToggleButton_TextFileFilterButton_CheckEvent"
                            Header="{DynamicResource ENUM_EnumGameTextFile_GameStrings}"
                            Icon="{StaticResource ResourceKey=IMAGE_TextFile}"
                            SizeDefinition="Middle"
                            Tag="{x:Static source:EnumGameTextFile.GameStrings}"
                            Unchecked="ToggleButton_TextFileFilterButton_CheckEvent" />
                        <Fluent:ToggleButton
                            Name="ToggleButton_TextFileFilterObjectStrings"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Top"
                            VerticalContentAlignment="Center"
                            Checked="ToggleButton_TextFileFilterButton_CheckEvent"
                            Header="{DynamicResource ENUM_EnumGameTextFile_ObjectStrings}"
                            Icon="{StaticResource ResourceKey=IMAGE_TextFile}"
                            SizeDefinition="Middle"
                            Tag="{x:Static source:EnumGameTextFile.ObjectStrings}"
                            Unchecked="ToggleButton_TextFileFilterButton_CheckEvent" />
                        <Fluent:ToggleButton
                            Name="ToggleButton_TextFileFilterTriggerStrings"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Top"
                            VerticalContentAlignment="Center"
                            Checked="ToggleButton_TextFileFilterButton_CheckEvent"
                            Header="{DynamicResource ENUM_EnumGameTextFile_TriggerStrings}"
                            Icon="{StaticResource ResourceKey=IMAGE_TextFile}"
                            SizeDefinition="Middle"
                            Tag="{x:Static source:EnumGameTextFile.TriggerStrings}"
                            Unchecked="ToggleButton_TextFileFilterButton_CheckEvent" />
                    </Fluent:InRibbonGallery>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox
                    Name="RibbonGroupBox_TextStatusFilter"
                    Grid.IsSharedSizeScope="True"
                    Header="{DynamicResource UI_RibbonGroupBox_TextStatusFilter_Header}">
                    <Fluent:InRibbonGallery
                        Name="InRibbonGallery_TextStatusFilter"
                        MinWidth="100"
                        CanCollapseToButton="False"
                        Header="{DynamicResource UI_InRibbonGallery_TextStatusFilter_Header}"
                        IsCollapsed="False"
                        MaxItemsInDropDownRow="1"
                        MinItemsInDropDownRow="1"
                        Orientation="Vertical"
                        ResizeMode="Both"
                        Selectable="False">
                        <Fluent:InRibbonGallery.Menu>
                            <Fluent:RibbonMenu>
                                <Fluent:MenuItem
                                    Name="MenuItem_TextStatusFilterSelectAll"
                                    Click="MenuItem_TextStatusFilterSelectAll_Click"
                                    Header="{DynamicResource TEXT_SelectALL}" />
                                <Fluent:MenuItem
                                    Name="MenuItem_TextStatusFilterSelectNone"
                                    Click="MenuItem_TextStatusFilterSelectNone_Click"
                                    Header="{DynamicResource TEXT_SelectNone}" />
                            </Fluent:RibbonMenu>
                        </Fluent:InRibbonGallery.Menu>
                        <Fluent:ToggleButton
                            Name="ToggleButton_TextStatusFilterEmpty"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Top"
                            VerticalContentAlignment="Center"
                            Checked="ToggleButton_TextStatusFilterButton_CheckEvent"
                            Header="{DynamicResource ENUM_EnumGameTextStatus_Empty}"
                            Icon="{StaticResource ResourceKey=IMAGE_TextFile}"
                            SizeDefinition="Middle"
                            Tag="{x:Static source:EnumGameTextStatus.Empty}"
                            Unchecked="ToggleButton_TextStatusFilterButton_CheckEvent" />
                        <Fluent:ToggleButton
                            Name="ToggleButton_TextStatusFilterNormal"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Top"
                            VerticalContentAlignment="Center"
                            Checked="ToggleButton_TextStatusFilterButton_CheckEvent"
                            Header="{DynamicResource ENUM_EnumGameTextStatus_Normal}"
                            Icon="{StaticResource ResourceKey=IMAGE_TextFile}"
                            SizeDefinition="Middle"
                            Tag="{x:Static source:EnumGameTextStatus.Normal}"
                            Unchecked="ToggleButton_TextStatusFilterButton_CheckEvent" />
                        <Fluent:ToggleButton
                            Name="ToggleButton_TextStatusFilterModified"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Top"
                            VerticalContentAlignment="Center"
                            Checked="ToggleButton_TextStatusFilterButton_CheckEvent"
                            Header="{DynamicResource ENUM_EnumGameTextStatus_Modified}"
                            Icon="{StaticResource ResourceKey=IMAGE_TextFile}"
                            SizeDefinition="Middle"
                            Tag="{x:Static source:EnumGameTextStatus.Modified}"
                            Unchecked="ToggleButton_TextStatusFilterButton_CheckEvent" />
                    </Fluent:InRibbonGallery>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox
                    Name="RibbonGroupBox_UseStatusFilter"
                    Grid.IsSharedSizeScope="True"
                    Header="{DynamicResource UI_RibbonGroupBox_UseStatusFilter_Header}">
                    <Fluent:InRibbonGallery
                        Name="InRibbonGallery_UseStatusFilter"
                        MinWidth="100"
                        CanCollapseToButton="False"
                        Header="{DynamicResource UI_InRibbonGallery_UseStatusFilter_Header}"
                        IsCollapsed="False"
                        MaxItemsInDropDownRow="1"
                        MinItemsInDropDownRow="1"
                        Orientation="Vertical"
                        ResizeMode="Both"
                        Selectable="False">
                        <Fluent:InRibbonGallery.Menu>
                            <Fluent:RibbonMenu>
                                <Fluent:MenuItem
                                    Name="MenuItem_UseStatusFilterSelectAll"
                                    Click="MenuItem_UseStatusFilterSelectAll_Click"
                                    Header="{DynamicResource TEXT_SelectALL}" />
                                <Fluent:MenuItem
                                    Name="MenuItem_UseStatusFilterSelectNone"
                                    Click="MenuItem_UseStatusFilterSelectNone_Click"
                                    Header="{DynamicResource TEXT_SelectNone}" />
                            </Fluent:RibbonMenu>
                        </Fluent:InRibbonGallery.Menu>
                        <Fluent:ToggleButton
                            Name="ToggleButton_UseStatusFilterNone"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Top"
                            VerticalContentAlignment="Center"
                            Checked="ToggleButton_UseStatusFilterButton_CheckEvent"
                            Header="{DynamicResource ENUM_EnumGameUseStatus_None}"
                            Icon="{StaticResource ResourceKey=IMAGE_TextFile}"
                            SizeDefinition="Middle"
                            Tag="{x:Static source:EnumGameUseStatus.None}"
                            Unchecked="ToggleButton_UseStatusFilterButton_CheckEvent" />
                        <Fluent:ToggleButton
                            Name="ToggleButton_UseStatusFilterDroped"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Top"
                            VerticalContentAlignment="Center"
                            Checked="ToggleButton_UseStatusFilterButton_CheckEvent"
                            Header="{DynamicResource ENUM_EnumGameUseStatus_Droped}"
                            Icon="{StaticResource ResourceKey=IMAGE_TextFile}"
                            SizeDefinition="Middle"
                            Tag="{x:Static source:EnumGameUseStatus.Droped}"
                            Unchecked="ToggleButton_UseStatusFilterButton_CheckEvent" />
                        <Fluent:ToggleButton
                            Name="ToggleButton_UseStatusFilterNormal"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Top"
                            VerticalContentAlignment="Center"
                            Checked="ToggleButton_UseStatusFilterButton_CheckEvent"
                            Header="{DynamicResource ENUM_EnumGameUseStatus_Normal}"
                            Icon="{StaticResource ResourceKey=IMAGE_TextFile}"
                            SizeDefinition="Middle"
                            Tag="{x:Static source:EnumGameUseStatus.Normal}"
                            Unchecked="ToggleButton_UseStatusFilterButton_CheckEvent" />
                        <Fluent:ToggleButton
                            Name="ToggleButton_UseStatusFilterAdded"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Top"
                            VerticalContentAlignment="Center"
                            Checked="ToggleButton_UseStatusFilterButton_CheckEvent"
                            Header="{DynamicResource ENUM_EnumGameUseStatus_Added}"
                            Icon="{StaticResource ResourceKey=IMAGE_TextFile}"
                            SizeDefinition="Middle"
                            Tag="{x:Static source:EnumGameUseStatus.Added}"
                            Unchecked="ToggleButton_UseStatusFilterButton_CheckEvent" />
                        <Fluent:ToggleButton
                            Name="ToggleButton_UseStatusFilterModified"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Top"
                            VerticalContentAlignment="Center"
                            Checked="ToggleButton_UseStatusFilterButton_CheckEvent"
                            Header="{DynamicResource ENUM_EnumGameUseStatus_Modified}"
                            Icon="{StaticResource ResourceKey=IMAGE_TextFile}"
                            SizeDefinition="Middle"
                            Tag="{x:Static source:EnumGameUseStatus.Modified}"
                            Unchecked="ToggleButton_UseStatusFilterButton_CheckEvent" />
                    </Fluent:InRibbonGallery>
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>
            <Fluent:RibbonTabItem Name="RibbonTabItem_Tool" Header="{DynamicResource UI_RibbonTabItem_Tool_Header}">
                <Fluent:RibbonGroupBox
                    Name="RibbonGroupBox_CopyBetweenLanguage"
                    Grid.IsSharedSizeScope="True"
                    Header="{DynamicResource UI_RibbonGroupBox_CopyBetweenLanguage_Header}" >
                    
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>
        </Fluent:Ribbon>
        <GroupBox
            Name="GroupBox_TranslatedTexts"
            Grid.Row="1"
            Margin="3"
            Header="{DynamicResource UI_GroupBox_TranslatedTexts_Header}">
            <DataGrid
                Name="DataGrid_TranslatedTexts"
                VerticalContentAlignment="Center"
                AlternatingRowBackground="LightGray"
                AlternationCount="2"
                AutoGenerateColumns="False"
                CanUserAddRows="False"
                CellEditEnding="DataGrid_TranslatedTexts_CellEditEnding"
                EnableColumnVirtualization="True"
                EnableRowVirtualization="True"
                SelectedCellsChanged="DataGrid_TranslatedTexts_SelectedCellsChanged"
                SelectionMode="Extended"
                SelectionUnit="CellOrRowHeader">
                <DataGrid.Resources>
                    <MenuItem
                        x:Key="MenuItem_TextID"
                        Header="{DynamicResource UI_DataGridColumn_TranslateTextID_Header}"
                        IsCheckable="True"
                        IsChecked="True"
                        Tag="0" />
                    <MenuItem
                        x:Key="MenuItem_Index"
                        Header="{DynamicResource UI_DataGridColumn_TranslateIndex_Header}"
                        IsCheckable="True"
                        IsChecked="True"
                        Tag="1" />
                    <MenuItem
                        x:Key="MenuItem_TextFile"
                        Header="{DynamicResource UI_DataGridColumn_TranslateTextFile_Header}"
                        IsCheckable="True"
                        IsChecked="True"
                        Tag="2" />
                    <MenuItem
                        x:Key="MenuItem_TextStatus"
                        Header="{DynamicResource UI_DataGridColumn_TranslateTextStatus_Header}"
                        IsCheckable="True"
                        IsChecked="True"
                        Tag="3" />
                    <MenuItem
                        x:Key="MenuItem_UseStatus"
                        Header="{DynamicResource UI_DataGridColumn_TranslateUseStatus_Header}"
                        IsCheckable="True"
                        IsChecked="False"
                        Tag="4" />
                    <MenuItem
                        x:Key="MenuItem_DropedText"
                        Header="{DynamicResource UI_DataGridColumn_TranslateDropedText_Header}"
                        IsCheckable="True"
                        IsChecked="False"
                        Tag="5" />
                    <MenuItem
                        x:Key="MenuItem_SourceText"
                        Header="{DynamicResource UI_DataGridColumn_TranslateSourceText_Header}"
                        IsCheckable="True"
                        IsChecked="True"
                        Tag="6" />
                    <MenuItem
                        x:Key="MenuItem_EditedText"
                        Header="{DynamicResource UI_DataGridColumn_TranslateEditedText_Header}"
                        IsCheckable="True"
                        IsChecked="True"
                        Tag="7" />
                    <ContextMenu x:Key="ContextMenu_ColumnVisible">
                        <StaticResource ResourceKey="MenuItem_TextID" />
                        <StaticResource ResourceKey="MenuItem_Index" />
                        <StaticResource ResourceKey="MenuItem_TextFile" />
                        <StaticResource ResourceKey="MenuItem_TextStatus" />
                        <StaticResource ResourceKey="MenuItem_UseStatus" />
                        <StaticResource ResourceKey="MenuItem_DropedText" />
                        <StaticResource ResourceKey="MenuItem_SourceText" />
                        <StaticResource ResourceKey="MenuItem_EditedText" />
                    </ContextMenu>
                </DataGrid.Resources>
                <DataGrid.ContextMenu>
                    <ContextMenu>
                        <MenuItem Click="MenuItem_TranslateEmptyEditedText_Click" Header="{DynamicResource UI_MenuItem_TranslateEmptyEditedText_Header}" />
                        <MenuItem Click="MenuItem_TranslateResetEditedText_Click" Header="{DynamicResource UI_MenuItem_TranslateResetEditedText_Header}" />
                        <Separator />
                        <MenuItem Click="MenuItem_TranslateGoToDataIndex_Click" Header="{DynamicResource UI_MenuItem_TranslateGoToDataIndex_Header}" />
                    </ContextMenu>
                </DataGrid.ContextMenu>
                <DataGrid.CellStyle>
                    <Style TargetType="DataGridCell">
                        <Setter Property="BorderThickness" Value="0" />
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="Gray" />
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="SkyBlue" />
                                <Setter Property="Foreground" Value="Black" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.CellStyle>
                <DataGrid.RowHeaderStyle>
                    <Style TargetType="{x:Type DataGridRowHeader}">
                        <Setter Property="Content">
                            <Setter.Value>
                                <MultiBinding Converter="{StaticResource Converter_AutoNumberValue}">
                                    <Binding />
                                    <Binding Path="Items" RelativeSource="{RelativeSource AncestorType={x:Type DataGrid}}" />
                                </MultiBinding>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </DataGrid.RowHeaderStyle>
                <DataGrid.RowStyle>
                    <Style TargetType="{x:Type DataGridRow}">
                        <Setter Property="VerticalAlignment" Value="Stretch" />
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="Gray" />
                                <Setter Property="Foreground" Value="Wheat" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>
                <DataGrid.ColumnHeaderStyle>
                    <Style TargetType="DataGridColumnHeader">
                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                        <Setter Property="ContextMenu" Value="{StaticResource ResourceKey=ContextMenu_ColumnVisible}" />
                    </Style>
                </DataGrid.ColumnHeaderStyle>
                <DataGrid.Columns>
                    <DataGridTextColumn
                        x:Name="DataGridColumn_TranslateIndex"
                        Width="Auto"
                        Binding="{Binding Index, UpdateSourceTrigger=PropertyChanged}"
                        CanUserReorder="True"
                        CanUserResize="True"
                        CanUserSort="True"
                        IsReadOnly="True"
                        Visibility="{Binding Source={StaticResource MenuItem_Index}, Path=IsChecked, Converter={StaticResource ResourceKey=Converter_BooleanToVisibility}}">
                        <DataGridTextColumn.Header>
                            <TextBlock Text="{DynamicResource UI_DataGridColumn_TranslateIndex_Header}" />
                        </DataGridTextColumn.Header>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Center" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="Margin" Value="2" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn
                        x:Name="DataGridColumn_TranslateTextID"
                        Width="*"
                        Binding="{Binding ID, UpdateSourceTrigger=PropertyChanged}"
                        CanUserReorder="True"
                        CanUserResize="True"
                        CanUserSort="True"
                        IsReadOnly="True"
                        Visibility="{Binding Source={StaticResource MenuItem_TextID}, Path=IsChecked, Converter={StaticResource ResourceKey=Converter_BooleanToVisibility}}">
                        <DataGridTextColumn.Header>
                            <TextBlock Text="{DynamicResource UI_DataGridColumn_TranslateTextID_Header}" />
                        </DataGridTextColumn.Header>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Left" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="Margin" Value="2" />
                                <Setter Property="TextWrapping" Value="Wrap" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn
                        x:Name="DataGridColumn_TranslateTextFile"
                        Width="Auto"
                        CanUserReorder="True"
                        CanUserResize="True"
                        CanUserSort="True"
                        IsReadOnly="True"
                        Visibility="{Binding Source={StaticResource MenuItem_TextFile}, Path=IsChecked, Converter={StaticResource ResourceKey=Converter_BooleanToVisibility}}">
                        <DataGridTextColumn.Binding>
                            <MultiBinding
                                Converter="{StaticResource ResourceKey=Converter_EnumNameInLanguage_TextFile}"
                                Mode="OneWay"
                                UpdateSourceTrigger="PropertyChanged">
                                <Binding />
                                <Binding ElementName="RibbonWindow_Main" Path="EnumCurrentLanguage" />
                            </MultiBinding>
                        </DataGridTextColumn.Binding>
                        <DataGridTextColumn.Header>
                            <TextBlock Text="{DynamicResource UI_DataGridColumn_TranslateTextFile_Header}" />
                        </DataGridTextColumn.Header>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Center" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="Margin" Value="2" />
                                <Setter Property="TextWrapping" Value="Wrap" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn
                        x:Name="DataGridColumn_TranslateTextStatus"
                        Width="Auto"
                        CanUserReorder="True"
                        CanUserResize="True"
                        CanUserSort="True"
                        IsReadOnly="True"
                        Visibility="{Binding Source={StaticResource MenuItem_TextStatus}, Path=IsChecked, Converter={StaticResource ResourceKey=Converter_BooleanToVisibility}}">
                        <DataGridTextColumn.Header>
                            <TextBlock Text="{DynamicResource UI_DataGridColumn_TranslateTextStatus_Header}" />
                        </DataGridTextColumn.Header>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Center" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="Margin" Value="2" />
                                <Setter Property="TextWrapping" Value="NoWrap" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn
                        x:Name="DataGridColumn_TranslateUseStatus"
                        Width="Auto"
                        CanUserReorder="True"
                        CanUserResize="True"
                        CanUserSort="True"
                        IsReadOnly="True"
                        Visibility="{Binding Source={StaticResource MenuItem_UseStatus}, Path=IsChecked, Converter={StaticResource ResourceKey=Converter_BooleanToVisibility}}">
                        <DataGridTextColumn.Header>
                            <TextBlock Text="{DynamicResource UI_DataGridColumn_TranslateUseStatus_Header}" />
                        </DataGridTextColumn.Header>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Center" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="Margin" Value="2" />
                                <Setter Property="TextWrapping" Value="NoWrap" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn
                        x:Name="DataGridColumn_TranslateDropedText"
                        Width="2*"
                        CanUserReorder="True"
                        CanUserResize="True"
                        CanUserSort="True"
                        IsReadOnly="True"
                        Visibility="{Binding Source={StaticResource MenuItem_DropedText}, Path=IsChecked, Converter={StaticResource ResourceKey=Converter_BooleanToVisibility}}">
                        <DataGridTextColumn.Binding>
                            <MultiBinding
                                Converter="{StaticResource ResourceKey=Converter_TranslateLanguageData}"
                                ConverterParameter="{x:Static source:Data_GameText.RN_GameText_DropedText}"
                                UpdateSourceTrigger="PropertyChanged">
                                <Binding />
                                <Binding ElementName="RibbonWindow_Main" Path="CurrentTranslateLanguage" />
                                <Binding ElementName="RibbonWindow_Main" Path="EnumCurrentLanguage" />
                            </MultiBinding>
                        </DataGridTextColumn.Binding>
                        <DataGridTextColumn.Header>
                            <TextBlock Text="{DynamicResource UI_DataGridColumn_TranslateDropedText_Header}" />
                        </DataGridTextColumn.Header>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Center" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="Margin" Value="2" />
                                <Setter Property="TextWrapping" Value="NoWrap" />
                                <Setter Property="FontWeight">
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource ResourceKey=Converter_DataGridColumnNullTextFontWeight}" ConverterParameter="{x:Static source:Data_GameText.RN_GameText_DropedText}">
                                            <Binding />
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn
                        x:Name="DataGridColumn_TranslateSourceText"
                        Width="2*"
                        CanUserReorder="True"
                        CanUserResize="True"
                        CanUserSort="True"
                        IsReadOnly="True"
                        Visibility="{Binding Source={StaticResource MenuItem_SourceText}, Path=IsChecked, Converter={StaticResource ResourceKey=Converter_BooleanToVisibility}}">
                        <DataGridTextColumn.Binding>
                            <MultiBinding
                                Converter="{StaticResource ResourceKey=Converter_TranslateLanguageData}"
                                ConverterParameter="{x:Static source:Data_GameText.RN_GameText_SourceText}"
                                UpdateSourceTrigger="PropertyChanged">
                                <Binding />
                                <Binding ElementName="RibbonWindow_Main" Path="CurrentTranslateLanguage" />
                                <Binding ElementName="RibbonWindow_Main" Path="EnumCurrentLanguage" />
                            </MultiBinding>
                        </DataGridTextColumn.Binding>
                        <DataGridTextColumn.Header>
                            <TextBlock Text="{DynamicResource UI_DataGridColumn_TranslateSourceText_Header}" />
                        </DataGridTextColumn.Header>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Center" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="Margin" Value="2" />
                                <Setter Property="TextWrapping" Value="NoWrap" />
                                <Setter Property="FontWeight">
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource ResourceKey=Converter_DataGridColumnNullTextFontWeight}" ConverterParameter="{x:Static source:Data_GameText.RN_GameText_SourceText}">
                                            <Binding />
                                            <Binding ElementName="RibbonWindow_Main" Path="CurrentTranslateLanguage" />
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn
                        x:Name="DataGridColumn_TranslateEditedText"
                        Width="2*"
                        CanUserReorder="True"
                        CanUserResize="True"
                        CanUserSort="False"
                        Visibility="{Binding Source={StaticResource MenuItem_EditedText}, Path=IsChecked, Converter={StaticResource ResourceKey=Converter_BooleanToVisibility}}">
                        <DataGridTextColumn.Header>
                            <TextBlock Text="{DynamicResource UI_DataGridColumn_TranslateEditedText_Header}" />
                        </DataGridTextColumn.Header>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Left" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="Margin" Value="2" />
                                <Setter Property="TextWrapping" Value="Wrap" />
                                <Setter Property="FontWeight">
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource ResourceKey=Converter_DataGridColumnNullTextFontWeight}" ConverterParameter="{x:Static source:Data_GameText.RN_GameText_EditedText}">
                                            <Binding />
                                            <Binding ElementName="RibbonWindow_Main" Path="CurrentTranslateLanguage" />
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                        <DataGridTextColumn.EditingElementStyle>
                            <Style TargetType="TextBox">
                                <Setter Property="HorizontalContentAlignment" Value="Left" />
                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                <Setter Property="Margin" Value="2" />
                                <Setter Property="AcceptsReturn" Value="True" />
                                <Setter Property="TextWrapping" Value="Wrap" />
                            </Style>
                        </DataGridTextColumn.EditingElementStyle>
                    </DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>
        </GroupBox>
        <GridSplitter
            Grid.Row="2"
            Grid.Column="0"
            Height="3"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Center"
            ResizeDirection="Rows" />
        <GroupBox
            Name="GroupBox_Details"
            Grid.Row="3"
            Grid.Column="0"
            Margin="3"
            Header="{DynamicResource UI_GroupBox_Details_Header}">
            <TabControl Name="TabControl_Details">
                <TabItem Name="TabItem_GameTextForLanguage" Header="{DynamicResource UI_TabItem_GameTextForLanguage_Header}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" MinWidth="150" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <GroupBox
                            Name="GroupBox_GameTextShowLanguage"
                            Grid.Column="0"
                            Header="{DynamicResource UI_GroupBox_GameTextShowLanguage_Header}">
                            <ListBox
                                Name="ListBox_GameTextShowLanguage"
                                SelectionChanged="ListBox_GameTextShowLanguage_SelectionChanged"
                                SelectionMode="Multiple" />
                        </GroupBox>
                        <GroupBox
                            Name="GroupBox_GameTextForLanguage"
                            Grid.Column="1"
                            Header="{DynamicResource UI_GroupBox_GameTextForLanguage_Header}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <TextBlock
                                    Name="TextBlock_DetailsID"
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    Margin="3"
                                    Text="" />
                                <TextBlock
                                    Name="TextBlock_DetailsIndex"
                                    Grid.Row="0"
                                    Grid.Column="1"
                                    Margin="3"
                                    Text="" />
                                <DataGrid
                                    Name="DataGrid_GameTextForLanguage"
                                    Grid.Row="1"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="2"
                                    VerticalContentAlignment="Center"
                                    AlternatingRowBackground="LightGray"
                                    AlternationCount="2"
                                    AutoGenerateColumns="False"
                                    CanUserAddRows="False"
                                    ItemsSource="{Binding}"
                                    SelectionMode="Extended"
                                    SelectionUnit="CellOrRowHeader">
                                    <DataGrid.Resources>
                                        <MenuItem
                                            x:Key="MenuItem_Language"
                                            Header="{DynamicResource UI_DataGridColumn_DeatilsLanguage_Header}"
                                            IsCheckable="True"
                                            IsChecked="True"
                                            Tag="8" />
                                        <MenuItem
                                            x:Key="MenuItem_TextStatus"
                                            Header="{DynamicResource UI_DataGridColumn_DeatilsTextStatus_Header}"
                                            IsCheckable="True"
                                            IsChecked="True"
                                            Tag="9" />
                                        <MenuItem
                                            x:Key="MenuItem_UseStatus"
                                            Header="{DynamicResource UI_DataGridColumn_DeatilsUseStatus_Header}"
                                            IsCheckable="True"
                                            IsChecked="False"
                                            Tag="10" />
                                        <MenuItem
                                            x:Key="MenuItem_DropedText"
                                            Header="{DynamicResource UI_DataGridColumn_DeatilsDropedText_Header}"
                                            IsCheckable="True"
                                            IsChecked="False"
                                            Tag="11" />
                                        <MenuItem
                                            x:Key="MenuItem_SourceText"
                                            Header="{DynamicResource UI_DataGridColumn_DeatilsSourceText_Header}"
                                            IsCheckable="True"
                                            IsChecked="True"
                                            Tag="12" />
                                        <MenuItem
                                            x:Key="MenuItem_EditedText"
                                            Header="{DynamicResource UI_DataGridColumn_DeatilsEditedText_Header}"
                                            IsCheckable="True"
                                            IsChecked="True"
                                            Tag="13" />
                                        <ContextMenu x:Key="ContextMenu_ColumnVisible">
                                            <StaticResource ResourceKey="MenuItem_Language" />
                                            <StaticResource ResourceKey="MenuItem_TextStatus" />
                                            <StaticResource ResourceKey="MenuItem_UseStatus" />
                                            <StaticResource ResourceKey="MenuItem_DropedText" />
                                            <StaticResource ResourceKey="MenuItem_SourceText" />
                                            <StaticResource ResourceKey="MenuItem_EditedText" />
                                        </ContextMenu>
                                    </DataGrid.Resources>
                                    <DataGrid.CellStyle>
                                        <Style TargetType="DataGridCell">
                                            <Setter Property="BorderThickness" Value="0" />
                                        </Style>
                                    </DataGrid.CellStyle>
                                    <DataGrid.RowHeaderStyle>
                                        <Style TargetType="{x:Type DataGridRowHeader}">
                                            <Setter Property="Content">
                                                <Setter.Value>
                                                    <MultiBinding Converter="{StaticResource Converter_AutoNumberValue}">
                                                        <Binding />
                                                        <Binding Path="Items" RelativeSource="{RelativeSource AncestorType={x:Type DataGrid}}" />
                                                    </MultiBinding>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </DataGrid.RowHeaderStyle>
                                    <DataGrid.RowStyle>
                                        <Style TargetType="{x:Type DataGridRow}">
                                            <Setter Property="VerticalAlignment" Value="Stretch" />
                                        </Style>
                                    </DataGrid.RowStyle>
                                    <DataGrid.ColumnHeaderStyle>
                                        <Style TargetType="DataGridColumnHeader">
                                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                                            <Setter Property="VerticalContentAlignment" Value="Center" />
                                            <Setter Property="ContextMenu" Value="{StaticResource ResourceKey=ContextMenu_ColumnVisible}" />
                                        </Style>
                                    </DataGrid.ColumnHeaderStyle>
                                    <DataGrid.Columns>
                                        <DataGridTextColumn
                                            x:Name="DataGridColumn_DetailsLanguage"
                                            Width="*"
                                            Binding="{Binding Path=Language, Converter={StaticResource ResourceKey=Converter_EnumLanguageToTreslateName}, UpdateSourceTrigger=PropertyChanged}"
                                            CanUserReorder="True"
                                            CanUserResize="True"
                                            CanUserSort="True"
                                            IsReadOnly="True"
                                            Visibility="{Binding Source={StaticResource MenuItem_Language}, Path=IsChecked, Converter={StaticResource ResourceKey=Converter_BooleanToVisibility}}">
                                            <DataGridTextColumn.Header>
                                                <TextBlock Text="{DynamicResource UI_DataGridColumn_DeatilsLanguage_Header}" />
                                            </DataGridTextColumn.Header>
                                            <DataGridTextColumn.ElementStyle>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="HorizontalAlignment" Value="Left" />
                                                    <Setter Property="VerticalAlignment" Value="Center" />
                                                    <Setter Property="Margin" Value="2" />
                                                    <Setter Property="TextWrapping" Value="Wrap" />
                                                </Style>
                                            </DataGridTextColumn.ElementStyle>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn
                                            x:Name="DataGridColumn_DetailsTextStatus"
                                            Width="Auto"
                                            CanUserReorder="True"
                                            CanUserResize="True"
                                            CanUserSort="True"
                                            IsReadOnly="True"
                                            Visibility="{Binding Source={StaticResource MenuItem_TextStatus}, Path=IsChecked, Converter={StaticResource ResourceKey=Converter_BooleanToVisibility}}">
                                            <DataGridTextColumn.Binding>
                                                <MultiBinding Converter="{StaticResource ResourceKey=Converter_EnumNameInLanguage_TextStatus}" UpdateSourceTrigger="PropertyChanged">
                                                    <Binding Path="TextStatus" />
                                                    <Binding ElementName="RibbonWindow_Main" Path="EnumCurrentLanguage" />
                                                </MultiBinding>
                                            </DataGridTextColumn.Binding>
                                            <DataGridTextColumn.Header>
                                                <TextBlock Text="{DynamicResource UI_DataGridColumn_DeatilsTextStatus_Header}" />
                                            </DataGridTextColumn.Header>
                                            <DataGridTextColumn.ElementStyle>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                                    <Setter Property="VerticalAlignment" Value="Center" />
                                                    <Setter Property="Margin" Value="2" />
                                                    <Setter Property="TextWrapping" Value="NoWrap" />
                                                </Style>
                                            </DataGridTextColumn.ElementStyle>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn
                                            x:Name="DataGridColumn_DetailsUseStatus"
                                            Width="Auto"
                                            CanUserReorder="True"
                                            CanUserResize="True"
                                            CanUserSort="True"
                                            IsReadOnly="True"
                                            Visibility="{Binding Source={StaticResource MenuItem_UseStatus}, Path=IsChecked, Converter={StaticResource ResourceKey=Converter_BooleanToVisibility}}">
                                            <DataGridTextColumn.Binding>
                                                <MultiBinding Converter="{StaticResource ResourceKey=Converter_EnumNameInLanguage_UseStatus}" UpdateSourceTrigger="PropertyChanged">
                                                    <Binding Path="UseStatus" />
                                                    <Binding ElementName="RibbonWindow_Main" Path="EnumCurrentLanguage" />
                                                </MultiBinding>
                                            </DataGridTextColumn.Binding>
                                            <DataGridTextColumn.Header>
                                                <TextBlock Text="{DynamicResource UI_DataGridColumn_DeatilsUseStatus_Header}" />
                                            </DataGridTextColumn.Header>
                                            <DataGridTextColumn.ElementStyle>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                                    <Setter Property="VerticalAlignment" Value="Center" />
                                                    <Setter Property="Margin" Value="2" />
                                                    <Setter Property="TextWrapping" Value="NoWrap" />
                                                </Style>
                                            </DataGridTextColumn.ElementStyle>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn
                                            x:Name="DataGridColumn_DetailsDropedText"
                                            Width="2*"
                                            CanUserReorder="True"
                                            CanUserResize="True"
                                            CanUserSort="True"
                                            IsReadOnly="True"
                                            Visibility="{Binding Source={StaticResource MenuItem_DropedText}, Path=IsChecked, Converter={StaticResource ResourceKey=Converter_BooleanToVisibility}}">
                                            <DataGridTextColumn.Binding>
                                                <MultiBinding Converter="{StaticResource ResourceKey=Converter_TranslateLanguageData}" UpdateSourceTrigger="PropertyChanged">
                                                    <Binding Path="Droped" />
                                                    <Binding ElementName="RibbonWindow_Main" Path="CurrentTranslateLanguage" />
                                                    <Binding ElementName="RibbonWindow_Main" Path="EnumCurrentLanguage" />
                                                </MultiBinding>
                                            </DataGridTextColumn.Binding>
                                            <DataGridTextColumn.Header>
                                                <TextBlock Text="{DynamicResource UI_DataGridColumn_DeatilsDropedText_Header}" />
                                            </DataGridTextColumn.Header>
                                            <DataGridTextColumn.ElementStyle>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                                    <Setter Property="VerticalAlignment" Value="Center" />
                                                    <Setter Property="Margin" Value="2" />
                                                    <Setter Property="TextWrapping" Value="NoWrap" />
                                                    <Setter Property="FontWeight">
                                                        <Setter.Value>
                                                            <MultiBinding Converter="{StaticResource ResourceKey=Converter_DataGridColumnNullTextFontWeight}" ConverterParameter="{x:Static source:Data_GameText.RN_GameTextForLanguage_DropedText}">
                                                                <Binding />
                                                                <Binding ElementName="RibbonWindow_Main" Path="CurrentTranslateLanguage" />
                                                            </MultiBinding>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </DataGridTextColumn.ElementStyle>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn
                                            x:Name="DataGridColumn_DetailsSourceText"
                                            Width="2*"
                                            CanUserReorder="True"
                                            CanUserResize="True"
                                            CanUserSort="True"
                                            IsReadOnly="True"
                                            Visibility="{Binding Source={StaticResource MenuItem_SourceText}, Path=IsChecked, Converter={StaticResource ResourceKey=Converter_BooleanToVisibility}}">
                                            <DataGridTextColumn.Binding>
                                                <MultiBinding Converter="{StaticResource ResourceKey=Converter_TranslateLanguageData}" UpdateSourceTrigger="PropertyChanged">
                                                    <Binding Path="Source" />
                                                    <Binding ElementName="RibbonWindow_Main" Path="CurrentTranslateLanguage" />
                                                    <Binding ElementName="RibbonWindow_Main" Path="EnumCurrentLanguage" />
                                                </MultiBinding>
                                            </DataGridTextColumn.Binding>
                                            <DataGridTextColumn.Header>
                                                <TextBlock Text="{DynamicResource UI_DataGridColumn_DeatilsSourceText_Header}" />
                                            </DataGridTextColumn.Header>
                                            <DataGridTextColumn.ElementStyle>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                                    <Setter Property="VerticalAlignment" Value="Center" />
                                                    <Setter Property="Margin" Value="2" />
                                                    <Setter Property="TextWrapping" Value="NoWrap" />
                                                    <Setter Property="FontWeight">
                                                        <Setter.Value>
                                                            <MultiBinding Converter="{StaticResource ResourceKey=Converter_DataGridColumnNullTextFontWeight}" ConverterParameter="{x:Static source:Data_GameText.RN_GameTextForLanguage_SourceText}">
                                                                <Binding />
                                                                <Binding ElementName="RibbonWindow_Main" Path="CurrentTranslateLanguage" />
                                                            </MultiBinding>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </DataGridTextColumn.ElementStyle>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn
                                            x:Name="DataGridColumn_DetailsEditedText"
                                            Width="2*"
                                            CanUserReorder="True"
                                            CanUserResize="True"
                                            CanUserSort="False"
                                            IsReadOnly="True"
                                            Visibility="{Binding Source={StaticResource MenuItem_EditedText}, Path=IsChecked, Converter={StaticResource ResourceKey=Converter_BooleanToVisibility}}">
                                            <DataGridTextColumn.Binding>
                                                <MultiBinding Converter="{StaticResource ResourceKey=Converter_TranslateLanguageData}" UpdateSourceTrigger="PropertyChanged">
                                                    <Binding Path="Edited" />
                                                    <Binding ElementName="RibbonWindow_Main" Path="CurrentTranslateLanguage" />
                                                    <Binding ElementName="RibbonWindow_Main" Path="EnumCurrentLanguage" />
                                                </MultiBinding>
                                            </DataGridTextColumn.Binding>
                                            <DataGridTextColumn.Header>
                                                <TextBlock Text="{DynamicResource UI_DataGridColumn_DeatilsEditedText_Header}" />
                                            </DataGridTextColumn.Header>
                                            <DataGridTextColumn.ElementStyle>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="HorizontalAlignment" Value="Left" />
                                                    <Setter Property="VerticalAlignment" Value="Center" />
                                                    <Setter Property="Margin" Value="2" />
                                                    <Setter Property="TextWrapping" Value="Wrap" />
                                                    <Setter Property="FontWeight">
                                                        <Setter.Value>
                                                            <MultiBinding Converter="{StaticResource ResourceKey=Converter_DataGridColumnNullTextFontWeight}" ConverterParameter="{x:Static source:Data_GameText.RN_GameTextForLanguage_EditedText}">
                                                                <Binding />
                                                                <Binding ElementName="RibbonWindow_Main" Path="CurrentTranslateLanguage" />
                                                            </MultiBinding>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </DataGridTextColumn.ElementStyle>
                                            <DataGridTextColumn.EditingElementStyle>
                                                <Style TargetType="TextBox">
                                                    <Setter Property="HorizontalContentAlignment" Value="Left" />
                                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                                    <Setter Property="Margin" Value="2" />
                                                    <Setter Property="AcceptsReturn" Value="True" />
                                                    <Setter Property="TextWrapping" Value="Wrap" />
                                                </Style>
                                            </DataGridTextColumn.EditingElementStyle>
                                        </DataGridTextColumn>
                                    </DataGrid.Columns>
                                </DataGrid>
                            </Grid>
                        </GroupBox>
                    </Grid>
                </TabItem>
                <TabItem Name="TabItem_GameTextInGalaxy" Header="{DynamicResource UI_TabItem_GameTextInGalaxy_Header}">
                    <GroupBox Name="GroupBox_GameTextInGalaxy">
                        <GroupBox.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock VerticalAlignment="Bottom" Text="{StaticResource UI_GroupBox_GameTextInGalaxy_Header}" />
                                <CheckBox
                                    Name="CheckBox_InGalaxyShowScript"
                                    VerticalAlignment="Bottom"
                                    VerticalContentAlignment="Bottom"
                                    Content="{DynamicResource UI_CheckBox_InGalaxyShowScript_Content}"
                                    IsChecked="False" />
                            </StackPanel>
                        </GroupBox.Header>
                        <DataGrid
                            Name="DataGrid_GameTextInGalaxy"
                            VerticalContentAlignment="Center"
                            AlternatingRowBackground="LightGray"
                            AlternationCount="2"
                            AutoGenerateColumns="False"
                            CanUserAddRows="False"
                            ItemsSource="{Binding}"
                            SelectionMode="Extended"
                            SelectionUnit="CellOrRowHeader">
                            <DataGrid.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Setter Property="BorderThickness" Value="0" />
                                </Style>
                            </DataGrid.CellStyle>
                            <DataGrid.RowHeaderStyle>
                                <Style TargetType="{x:Type DataGridRowHeader}">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <MultiBinding Converter="{StaticResource Converter_AutoNumberValue}">
                                                <Binding />
                                                <Binding Path="Items" RelativeSource="{RelativeSource AncestorType={x:Type DataGrid}}" />
                                            </MultiBinding>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </DataGrid.RowHeaderStyle>
                            <DataGrid.RowStyle>
                                <Style TargetType="{x:Type DataGridRow}">
                                    <Setter Property="VerticalAlignment" Value="Stretch" />
                                </Style>
                            </DataGrid.RowStyle>
                            <DataGrid.ColumnHeaderStyle>
                                <Style TargetType="DataGridColumnHeader">
                                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                </Style>
                            </DataGrid.ColumnHeaderStyle>
                            <DataGrid.Columns>
                                <DataGridTextColumn
                                    x:Name="DataGridColumn_GalaxyFile"
                                    Width="2*"
                                    Binding="{Binding Converter={StaticResource Converter_TextInGalaxyFileName}, UpdateSourceTrigger=PropertyChanged}"
                                    CanUserReorder="True"
                                    CanUserResize="True"
                                    CanUserSort="True"
                                    IsReadOnly="True">
                                    <DataGridTextColumn.Header>
                                        <TextBlock Text="{DynamicResource UI_DataGridColumn_GalaxyFile_Header}" />
                                    </DataGridTextColumn.Header>
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="HorizontalAlignment" Value="Center" />
                                            <Setter Property="VerticalAlignment" Value="Center" />
                                            <Setter Property="Margin" Value="2" />
                                            <Setter Property="TextWrapping" Value="NoWrap" />
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn
                                    x:Name="DataGridColumn_GalaxyLineNumber"
                                    Width="*"
                                    Binding="{Binding LineNumber, UpdateSourceTrigger=PropertyChanged}"
                                    CanUserReorder="True"
                                    CanUserResize="True"
                                    CanUserSort="True"
                                    IsReadOnly="True">
                                    <DataGridTextColumn.Header>
                                        <TextBlock Text="{DynamicResource UI_DataGridColumn_GalaxyLineNumber_Header}" />
                                    </DataGridTextColumn.Header>
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="HorizontalAlignment" Value="Center" />
                                            <Setter Property="VerticalAlignment" Value="Center" />
                                            <Setter Property="Margin" Value="2" />
                                            <Setter Property="TextWrapping" Value="NoWrap" />
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>
                                <DataGridTemplateColumn
                                    x:Name="DataGridTemplateColumn_GalaxyText"
                                    Width="8*"
                                    CanUserReorder="True"
                                    CanUserResize="True"
                                    CanUserSort="True"
                                    IsReadOnly="True">
                                    <DataGridTemplateColumn.Header>
                                        <TextBlock Text="{DynamicResource UI_DataGridColumn_GalaxyText_Header}" />
                                    </DataGridTemplateColumn.Header>
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <FlowDocumentScrollViewer
                                                x:Name="DataGridRichTextBoxTemplate_InGalaxyText"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                HorizontalContentAlignment="Left"
                                                VerticalContentAlignment="Center"
                                                BorderThickness="0"
                                                IsHitTestVisible="True">
                                                <FlowDocumentScrollViewer.Document>
                                                    <MultiBinding Converter="{StaticResource ResourceKey=Converter_RichTextBoxInGalaxyText}" UpdateSourceTrigger="PropertyChanged">
                                                        <Binding />
                                                        <Binding ElementName="RibbonWindow_Main" Path="CurrentTranslateLanguage" />
                                                        <Binding ElementName="CheckBox_InGalaxyShowScript" Path="IsChecked" />
                                                        <Binding ElementName="RibbonWindow_Main" Path="EnumCurrentLanguage" />
                                                    </MultiBinding>
                                                </FlowDocumentScrollViewer.Document>
                                            </FlowDocumentScrollViewer>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </GroupBox>
                </TabItem>
            </TabControl>
        </GroupBox>
        <Fluent:StatusBar
            Name="StatusBar_Below"
            Grid.Row="4"
            Grid.Column="0">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <Fluent:StatusBarItem
                Grid.Column="0"
                VerticalAlignment="Stretch"
                HorizontalContentAlignment="Stretch"
                VerticalContentAlignment="Stretch">
                <ProgressBar
                    Name="ProgressBar_Loading"
                    Margin="3"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    Visibility="Hidden" />
            </Fluent:StatusBarItem>
            <Separator Grid.Column="1" HorizontalAlignment="Left" />
            <Fluent:StatusBarItem
                Grid.Column="2"
                VerticalAlignment="Stretch"
                HorizontalContentAlignment="Stretch"
                VerticalContentAlignment="Stretch">
                <TextBlock
                    Name="TextBlock_ProgressMsg"
                    Margin="3"
                    Foreground="White"
                    Visibility="Hidden" />
            </Fluent:StatusBarItem>
        </Fluent:StatusBar>
    </Grid>
</Fluent:RibbonWindow>